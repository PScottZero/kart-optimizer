{"version":3,"sources":["classes/Stats.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","components/PartSelection/PartSelection.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","util/Common.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","components/KartCombo/KartCombo.tsx","components/Optimizer/Optimizer.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["SpeedHandlingTerrain","TractionTerrain","Header","className","src","mk8","alt","Component","PartSelection","onClick","this","props","style","background","color","selectedPart","img","name","partName","isSelected","split","length","includes","pop","join","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","stats","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","setPart","part","type","console","log","setKart","parts","PartContext","React","createContext","displayName","PartProvider","children","useState","partData","setPartData","DRIVER","data","BODY","TIRE","GLIDER","useEffect","Provider","value","PartTile","useContext","PartList","Array","partList","fill","map","_","index","KartConfig","selectedPartList","state","setState","show","isSelectedCategory","sumOfStats","adjustStat","stat","reduce","sum","current","statColor","startColor","endColor","diffs","diff","ProgressBar","separators","i","push","height","label","toFixed","width","KartStats","context","KartCombo","statValues","forEach","Optimizer","statPriority","setStatPriority","SortableItem","SortableElement","SortableList","SortableContainer","items","onSortEnd","oldIndex","newIndex","arrayMove","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c694af72.chunk.js","sourcesContent":["export enum SpeedHandlingTerrain {\n  GROUND = 'Ground',\n  WATER = 'Water',\n  ANTI_GRAVITY = 'Anti-Gravity',\n  AIR = 'Air',\n}\n\nexport enum TractionTerrain {\n  ON_ROAD = 'On-Road',\n  OFF_ROAD = 'Off-Road',\n}\n\nexport class Stats {\n  constructor(\n    readonly weight: number = 0,\n    readonly acceleration: number = 0,\n    readonly onRoadTraction: number = 0,\n    readonly offRoadTraction: number = 0,\n    readonly miniTurbo: number = 0,\n    readonly groundSpeed: number = 0,\n    readonly waterSpeed: number = 0,\n    readonly antiGravitySpeed: number = 0,\n    readonly airSpeed: number = 0,\n    readonly groundHandling: number = 0,\n    readonly waterHandling: number = 0,\n    readonly antiGravityHandling: number = 0,\n    readonly airHandling: number = 0\n  ) {}\n}\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport mk8 from './MarioKart8.webp';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, MouseEventHandler } from 'react';\nimport { Part } from '../../classes/Part';\nimport './PartSelection.scss';\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  isSelected: boolean;\n  onClick: MouseEventHandler;\n}\n\nexport default class PartSelection extends Component<PartSelectionProps> {\n  render() {\n    return (\n      <div className=\"PartSelection\" onClick={this.props.onClick}>\n        <div className=\"SelectedPart\" style={{ background: this.color() }}>\n          <img\n            className=\"PartImage\"\n            src={this.props.selectedPart.img}\n            alt={this.props.selectedPart.name}\n          ></img>\n        </div>\n        <p className=\"PartLabel\">{this.partName()}</p>\n      </div>\n    );\n  }\n\n  color(): string {\n    return this.props.isSelected ? '#26baff' : '#777';\n  }\n\n  partName(): string {\n    let split = this.props.selectedPart.name.split(' ');\n    if (split[split.length - 1].includes('(')) split.pop();\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\n    return split.join(' ');\n  }\n}\n","import { Stats } from './Stats';\n\nexport class Part {\n  constructor(\n    readonly name: string = '',\n    readonly img: string = '',\n    readonly stats: Stats = new Stats()\n  ) {}\n}\n\nexport enum PartType {\n  DRIVER = 'Driver',\n  BODY = 'Body',\n  TIRE = 'Tire',\n  GLIDER = 'Glider',\n}\n","import React from 'react';\nimport { Part, PartType } from '../classes/Part';\nimport drivers from '../json/drivers.json';\nimport bodies from '../json/bodies.json';\nimport tires from '../json/tires.json';\nimport gliders from '../json/gliders.json';\n\nexport interface PartData {\n  drivers: Part[];\n  bodies: Part[];\n  tires: Part[];\n  gliders: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n  setPart: (part: Part, type: PartType) => void;\n  setKart: (parts: Part[]) => void;\n}\n\nexport const defaultPartData: PartData = {\n  drivers: [],\n  bodies: [],\n  tires: [],\n  gliders: [],\n  selectedDriver: new Part(),\n  selectedBody: new Part(),\n  selectedTire: new Part(),\n  selectedGlider: new Part(),\n  setPart: (part: Part, type: PartType) => console.log(part, type),\n  setKart: (parts: Part[]) => console.log(parts),\n};\n\nexport const PartContext = React.createContext<PartData>(defaultPartData);\nPartContext.displayName = 'PartData';\n\nconst PartProvider: React.FC = (props) => {\n  const { children } = props;\n  const [partData, setPartData] = React.useState(defaultPartData);\n\n  const setPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return { ...data, selectedDriver: part };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return { ...data, selectedBody: part };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return { ...data, selectedTire: part };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return { ...data, selectedGlider: part };\n        });\n        break;\n    }\n  };\n\n  const setKart = (parts: Part[]) => {\n    setPartData((data) => {\n      return {\n        ...data,\n        selectedDriver: parts[0],\n        selectedBody: parts[1],\n        selectedTire: parts[2],\n        selectedGlider: parts[3],\n      };\n    });\n  };\n\n  React.useEffect(() => {\n    setPartData({\n      drivers: drivers,\n      bodies: bodies,\n      tires: tires,\n      gliders: gliders,\n      selectedDriver: drivers[0],\n      selectedBody: bodies[0],\n      selectedTire: tires[0],\n      selectedGlider: gliders[0],\n      setPart: setPart,\n      setKart: setKart,\n    });\n  }, []);\n\n  return (\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\n  );\n};\n\nexport default PartProvider;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { Part, PartType } from '../../classes/Part';\nimport './PartTile.scss';\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected?: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#555';\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport PartTile from '../PartTile/PartTile';\nimport './PartList.scss';\n\ninterface PartListProps {\n  partList: Part[];\n  type: PartType;\n}\n\nconst PartList: React.FC<PartListProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const isSelected = (part: Part) => {\n    return (\n      part === partData.selectedDriver ||\n      part === partData.selectedBody ||\n      part === partData.selectedTire ||\n      part === partData.selectedGlider\n    );\n  };\n\n  return (\n    <div className=\"PartList\">\n      {new Array(props.partList.length).fill(0).map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={props.partList[index]}\n            type={props.type}\n            isSelected={isSelected(props.partList[index])}\n          ></PartTile>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PartList;\n","import React, { useState } from 'react';\n\nimport './KartConfig.scss';\nimport PartSelection from '../PartSelection/PartSelection';\nimport { Part, PartType } from '../../classes/Part';\nimport PartList from '../PartList/PartList';\nimport { PartContext } from '../../providers/PartProvider';\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n}\n\nexport const KartConfig: React.FC = () => {\n  const partData = React.useContext(PartContext);\n  const [state, setState] = useState<KartConfigState>({\n    selectedPartList: React.useContext(PartContext).drivers,\n  });\n\n  const show = (partList: Part[]) => {\n    setState({\n      selectedPartList: partList,\n    });\n  };\n\n  const type = (partList: Part[]): PartType => {\n    if (partList.length > 0) {\n      switch (partList[0].name) {\n        case 'Standard Kart':\n          return PartType.BODY;\n        case 'Standard':\n          return PartType.TIRE;\n        case 'Super Glider':\n          return PartType.GLIDER;\n        default:\n          return PartType.DRIVER;\n      }\n    }\n    return PartType.DRIVER;\n  };\n\n  const partList = (): Part[] => {\n    return state.selectedPartList.length === 0\n      ? partData.drivers\n      : state.selectedPartList;\n  };\n\n  const isSelectedCategory = (partList: Part[]): boolean => {\n    return type(partList) === type(state.selectedPartList);\n  };\n\n  return (\n    <div className=\"KartConfig\">\n      <div className=\"CenterContainer\">\n        <div className=\"PartOptions\">\n          <PartSelection\n            selectedPart={partData.selectedDriver}\n            isSelected={isSelectedCategory(partData.drivers)}\n            onClick={() => show(partData.drivers)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedBody}\n            isSelected={isSelectedCategory(partData.bodies)}\n            onClick={() => show(partData.bodies)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedTire}\n            isSelected={isSelectedCategory(partData.tires)}\n            onClick={() => show(partData.tires)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedGlider}\n            isSelected={isSelectedCategory(partData.gliders)}\n            onClick={() => show(partData.gliders)}\n          ></PartSelection>\n        </div>\n        <div className=\"Separator\"></div>\n        <PartList partList={partList()} type={type(partList())}></PartList>\n      </div>\n    </div>\n  );\n};\n","import { Part } from '../classes/Part';\n\nexport const sumOfStats = (parts: Part[]): number[] => {\n  const adjustStat = (stat: number): number => stat / 4 + 0.75;\n  return [\n    adjustStat(\n      parts\n        .map((part) => part.stats.groundSpeed)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.acceleration)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.weight)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.groundHandling)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.offRoadTraction)\n        .reduce((sum, current) => sum + current)\n    ),\n  ];\n};\n\nexport const statColor = (stat: number): string => {\n  const startColor = [38, 186, 255];\n  const endColor = [249, 36, 112];\n  const diffs = startColor.map((color, index) => endColor[index] - color);\n  console.log(diffs);\n  const color = diffs.map(\n    (diff, index) => startColor[index] + diff * (stat / 6)\n  );\n  console.log(color);\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n};\n","import React from 'react';\nimport { statColor } from '../../util/Common';\nimport './ProgressBar.scss';\n\ninterface ProgressBarProps {\n  label: String;\n  value: number;\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = (props) => {\n  let separators = [];\n  for (var i = 0; i < 23; i++) {\n    separators.push(\n      <div\n        key={i}\n        className=\"VerticalSeparator\"\n        style={{ height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem' }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className=\"ProgressBar\">\n      <p>\n        {props.label}:{' '}\n        <span style={{ color: statColor(props.value) }}>\n          {+props.value.toFixed(2)}\n        </span>\n      </p>\n      <div className=\"Bar\">\n        <div\n          className=\"Progress\"\n          style={{ width: `${100 - props.value * (100 / 6)}%` }}\n        ></div>\n        <div className=\"SeparatorContainer\">{separators}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { sumOfStats } from '../../util/Common';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport './KartStats.scss';\n\nexport const KartStats: React.FC = () => {\n  const context = React.useContext(PartContext);\n  const stats = sumOfStats([\n    context.selectedDriver,\n    context.selectedBody,\n    context.selectedTire,\n    context.selectedGlider,\n  ]);\n\n  return (\n    <div className=\"PartStats\">\n      <div className=\"StatsContainer\">\n        <ProgressBar label=\"Speed\" value={stats[0]}></ProgressBar>\n        <ProgressBar label=\"Acceleration\" value={stats[1]}></ProgressBar>\n        <ProgressBar label=\"Weight\" value={stats[2]}></ProgressBar>\n        <ProgressBar label=\"Handling\" value={stats[3]}></ProgressBar>\n        <ProgressBar label=\"Traction\" value={stats[4]}></ProgressBar>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Part } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport { statColor, sumOfStats } from '../../util/Common';\nimport './KartCombo.scss';\n\ninterface KartComboProps {\n  parts: Part[];\n}\n\nconst KartCombo: React.FC<KartComboProps> = (props) => {\n  const context = React.useContext(PartContext);\n  const parts: JSX.Element[] = [];\n  for (var part of props.parts) {\n    parts.push(\n      <div className=\"KartComboPart\">\n        <img src={part.img} alt=\"Part\"></img>\n      </div>\n    );\n  }\n\n  const stats: JSX.Element[] = [];\n  const statLabels = ['S', 'A', 'W', 'H', 'T'];\n  const statValues = sumOfStats(props.parts);\n  statLabels.forEach((value, index) =>\n    stats.push(\n      <p>\n        {value}:{' '}\n        <span style={{ color: statColor(statValues[index]) }}>\n          {statValues[index]}\n        </span>\n      </p>\n    )\n  );\n\n  return (\n    <div className=\"KartCombo\" onClick={() => context.setKart(props.parts)}>\n      <div className=\"Parts\">{parts}</div>\n      <div className=\"Stats\">{stats}</div>\n    </div>\n  );\n};\n\nexport default KartCombo;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n} from 'react-sortable-hoc';\nimport KartCombo from '../KartCombo/KartCombo';\nimport './Optimizer.scss';\n\nconst Optimizer: React.FC = () => {\n  const context = React.useContext(PartContext);\n  const [{ statPriority }, setStatPriority] = React.useState({\n    statPriority: ['Speed', 'Acceleration', 'Weight', 'Handling', 'Traction'],\n  });\n\n  const SortableItem = SortableElement(({ value }: any) => <li>{value}</li>);\n\n  const SortableList = SortableContainer(({ items }: any) => {\n    return (\n      <ul>\n        {items.map((value: any, index: any) => (\n          <SortableItem key={`item-${value}`} index={index} value={value} />\n        ))}\n      </ul>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\n    setStatPriority({\n      statPriority: arrayMove(statPriority, oldIndex, newIndex),\n    });\n  };\n\n  return (\n    <div className=\"Optimizer\">\n      <div className=\"Config\">\n        <SortableList items={statPriority} onSortEnd={onSortEnd}></SortableList>\n        <button>Generate Karts</button>\n      </div>\n      <div className=\"Options\">\n        {new Array(5).fill(0).map(() => (\n          <KartCombo\n            parts={[\n              context.selectedDriver,\n              context.selectedBody,\n              context.selectedTire,\n              context.selectedGlider,\n            ]}\n          ></KartCombo>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Optimizer;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport './KartOptimizerApp.scss';\nimport { KartConfig } from './components/KartConfig/KartConfig';\nimport { KartStats } from './components/KartStats/KartStats';\nimport PartProvider from './providers/PartProvider';\nimport Optimizer from './components/Optimizer/Optimizer';\n\nexport default class KartOptimizerApp extends Component {\n  render() {\n    return (\n      <PartProvider>\n        <div className=\"KartOptimizerApp\">\n          <Header></Header>\n          <KartConfig></KartConfig>\n          <KartStats></KartStats>\n          <Optimizer></Optimizer>\n        </div>\n      </PartProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport KartOptimizerApp from './KartOptimizerApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}