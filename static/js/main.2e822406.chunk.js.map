{"version":3,"sources":["providers/StatPriorityProvider.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","classes/Stats.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartSelection/PartSelection.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","util/Common.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","components/KartCombo/KartCombo.tsx","components/StatPriority/StatPriority.tsx","classes/Kart.tsx","components/Optimizer/Optimizer.tsx","components/Sidebar/Sidebar.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["StatNames","Header","className","src","mk8","alt","Component","SpeedHandlingTerrain","TractionTerrain","defaultStatPriorityData","statPriority","SPEED","ACCELERATION","PRIORITY","WEIGHT","HANDLING","TRACTION","setNewStatPriority","console","log","StatPriorityContext","React","createContext","StatPriorityProvider","props","children","useState","setStatPriority","data","useEffect","Provider","value","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","name","img","stats","stat","this","map","getStat","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","selectedDriverIsFixed","selectedBodyIsFixed","selectedTireIsFixed","selectedGliderIsFixed","setPart","part","type","setKart","kart","setFixed","unsetFixed","PartContext","PartProvider","partData","setPartData","DRIVER","BODY","TIRE","GLIDER","driver","body","tire","glider","Object","assign","PartSelection","partContext","useContext","isFixed","selectedPartType","style","background","isSelected","onClick","selectedPart","split","length","includes","pop","join","partName","PartTile","PartList","Array","partList","fill","_","index","KartConfig","selectedPartList","state","setState","show","partListType","isSelectedCategory","sumOfStats","parts","adjustStat","reduce","sum","current","statColor","startColor","endColor","color","diff","ProgressBar","separators","i","push","height","label","toFixed","width","KartStats","context","KartCombo","statValues","undefined","forEach","StatPriority","SortableItem","SortableElement","currentIndex","indexOf","SortableList","SortableContainer","items","onSortEnd","oldIndex","newIndex","arrayMove","Kart","speed","handling","traction","Optimizer","statPriorityContext","absDiff","priority","mean","getStats","Math","abs","sumOfPriorityStats","compareRegularStats","part1","part2","regular","kart1Stat","kart2Stat","comparePriorityStats","compareAbsDiff","kart1AbsDiff","kart2AbsDiff","compareStats","value1","value2","part1StatSum","part2StatSum","topParts","count","slice","sort","prioritySplit","topPartCount","topDrivers","topBodies","topTires","topGliders","karts","kart1","kart2","topKarts","Sidebar","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e822406.chunk.js","sourcesContent":["import React from 'react';\n\ninterface StatPriorityData {\n  statPriority: StatNames[];\n  setNewStatPriority: (statPriority: StatNames[]) => void;\n}\n\nexport enum StatNames {\n  SPEED = 'Speed',\n  ACCELERATION = 'Acceleration',\n  WEIGHT = 'Weight',\n  HANDLING = 'Handling',\n  TRACTION = 'Traction',\n  PRIORITY = '',\n}\n\nconst defaultStatPriorityData = {\n  statPriority: [\n    StatNames.SPEED,\n    StatNames.ACCELERATION,\n    StatNames.PRIORITY,\n    StatNames.WEIGHT,\n    StatNames.HANDLING,\n    StatNames.TRACTION,\n  ],\n  setNewStatPriority: (statPriority: StatNames[]) => console.log(statPriority),\n};\n\nexport const StatPriorityContext = React.createContext<StatPriorityData>(\n  defaultStatPriorityData\n);\n\nconst StatPriorityProvider: React.FC = (props) => {\n  const { children } = props;\n  const [statPriority, setStatPriority] = React.useState(\n    defaultStatPriorityData\n  );\n\n  const setNewStatPriority = (statPriority: StatNames[]) => {\n    setStatPriority((data) => {\n      return { ...data, statPriority: statPriority };\n    });\n  };\n\n  React.useEffect(() => {\n    setStatPriority((data) => {\n      return { ...data, setNewStatPriority: setNewStatPriority };\n    });\n  }, []);\n\n  return (\n    <StatPriorityContext.Provider value={statPriority}>\n      {children}\n    </StatPriorityContext.Provider>\n  );\n};\n\nexport default StatPriorityProvider;\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport mk8 from './MarioKart8.webp';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SpeedHandlingTerrain {\n  GROUND = 'Ground',\n  WATER = 'Water',\n  ANTI_GRAVITY = 'Anti-Gravity',\n  AIR = 'Air',\n}\n\nexport enum TractionTerrain {\n  ON_ROAD = 'On-Road',\n  OFF_ROAD = 'Off-Road',\n}\n\nexport class Stats {\n  constructor(\n    readonly weight: number = 0,\n    readonly acceleration: number = 0,\n    readonly onRoadTraction: number = 0,\n    readonly offRoadTraction: number = 0,\n    readonly miniTurbo: number = 0,\n    readonly groundSpeed: number = 0,\n    readonly waterSpeed: number = 0,\n    readonly antiGravitySpeed: number = 0,\n    readonly airSpeed: number = 0,\n    readonly groundHandling: number = 0,\n    readonly waterHandling: number = 0,\n    readonly antiGravityHandling: number = 0,\n    readonly airHandling: number = 0\n  ) {}\n}\n\nexport const ReducedStats = (\n  speed: number,\n  acceleration: number,\n  weight: number,\n  handling: number,\n  traction: number\n) => {\n  return new Stats(\n    weight,\n    acceleration,\n    0,\n    traction,\n    0,\n    speed,\n    0,\n    0,\n    0,\n    handling,\n    0,\n    0,\n    0\n  );\n};\n","import { StatNames } from '../providers/StatPriorityProvider';\nimport { Stats } from './Stats';\n\nexport class Part {\n  constructor(\n    readonly name: string = '',\n    readonly img: string = '',\n    readonly stats: Stats = new Stats()\n  ) {}\n\n  getStat(stat: StatNames): number {\n    switch (stat) {\n      case StatNames.SPEED:\n        return this.stats.groundSpeed;\n      case StatNames.ACCELERATION:\n        return this.stats.acceleration;\n      case StatNames.WEIGHT:\n        return this.stats.weight;\n      case StatNames.HANDLING:\n        return this.stats.groundHandling;\n      case StatNames.TRACTION:\n        return this.stats.offRoadTraction;\n      default:\n        return 0;\n    }\n  }\n\n  getStats(stats: StatNames[]): number[] {\n    return stats.map((stat) => this.getStat(stat));\n  }\n}\n\nexport enum PartType {\n  DRIVER = 'Driver',\n  BODY = 'Body',\n  TIRE = 'Tire',\n  GLIDER = 'Glider',\n}\n","import React from 'react';\nimport { Part, PartType } from '../classes/Part';\nimport drivers from '../json/drivers.json';\nimport bodies from '../json/bodies.json';\nimport tires from '../json/tires.json';\nimport gliders from '../json/gliders.json';\nimport { Kart } from '../classes/Kart';\n\nexport interface PartData {\n  drivers: Part[];\n  bodies: Part[];\n  tires: Part[];\n  gliders: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n  selectedDriverIsFixed: boolean;\n  selectedBodyIsFixed: boolean;\n  selectedTireIsFixed: boolean;\n  selectedGliderIsFixed: boolean;\n  setPart: (part: Part, type: PartType) => void;\n  setKart: (kart: Kart) => void;\n  setFixed: (type: PartType) => void;\n  unsetFixed: (type: PartType) => void;\n}\n\nexport const defaultPartData: PartData = {\n  drivers: [],\n  bodies: [],\n  tires: [],\n  gliders: [],\n  selectedDriver: new Part(),\n  selectedBody: new Part(),\n  selectedTire: new Part(),\n  selectedGlider: new Part(),\n  selectedDriverIsFixed: false,\n  selectedBodyIsFixed: false,\n  selectedTireIsFixed: false,\n  selectedGliderIsFixed: false,\n  setPart: (part: Part, type: PartType) => console.log(part, type),\n  setKart: (kart: Kart) => console.log(kart),\n  setFixed: (type: PartType) => console.log(type),\n  unsetFixed: (type: PartType) => console.log(type),\n};\n\nexport const PartContext = React.createContext<PartData>(defaultPartData);\n\nconst PartProvider: React.FC = (props) => {\n  const { children } = props;\n  const [partData, setPartData] = React.useState(defaultPartData);\n\n  const setPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return { ...data, selectedDriver: part };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return { ...data, selectedBody: part };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return { ...data, selectedTire: part };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return { ...data, selectedGlider: part };\n        });\n        break;\n    }\n  };\n\n  const setKart = (kart: Kart) => {\n    setPartData((data) => {\n      return {\n        ...data,\n        selectedDriver: kart.driver,\n        selectedBody: kart.body,\n        selectedTire: kart.tire,\n        selectedGlider: kart.glider,\n      };\n    });\n  };\n\n  const setFixed = (type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedDriverIsFixed: true,\n          };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedBodyIsFixed: true,\n          };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedTireIsFixed: true,\n          };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedGliderIsFixed: true,\n          };\n        });\n        break;\n    }\n  };\n\n  const unsetFixed = (type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedDriverIsFixed: false,\n          };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedBodyIsFixed: false,\n          };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedTireIsFixed: false,\n          };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return {\n            ...data,\n            selectedGliderIsFixed: false,\n          };\n        });\n        break;\n    }\n  };\n\n  React.useEffect(() => {\n    setPartData({\n      drivers: drivers.map((driver) => Object.assign(new Part(), driver)),\n      bodies: bodies.map((body) => Object.assign(new Part(), body)),\n      tires: tires.map((tire) => Object.assign(new Part(), tire)),\n      gliders: gliders.map((glider) => Object.assign(new Part(), glider)),\n      selectedDriver: Object.assign(new Part(), drivers[0]),\n      selectedBody: Object.assign(new Part(), bodies[0]),\n      selectedTire: Object.assign(new Part(), tires[0]),\n      selectedGlider: Object.assign(new Part(), gliders[0]),\n      selectedDriverIsFixed: false,\n      selectedBodyIsFixed: false,\n      selectedTireIsFixed: false,\n      selectedGliderIsFixed: false,\n      setPart: setPart,\n      setKart: setKart,\n      setFixed: setFixed,\n      unsetFixed: unsetFixed,\n    });\n  }, []);\n\n  return (\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\n  );\n};\n\nexport default PartProvider;\n","import React, { MouseEventHandler } from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport './PartSelection.scss';\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  selectedPartType: PartType;\n  isSelected: boolean;\n  isFixed: boolean;\n  onClick: MouseEventHandler;\n}\n\nconst PartSelection: React.FC<PartSelectionProps> = (props) => {\n  const partContext = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#777';\n  };\n\n  const lockButtonColor = (): string => {\n    return isFixed() ? '#f92470' : '#26baff';\n  };\n\n  const partName = (): string => {\n    let split = props.selectedPart.name.split(' ');\n    if (split[split.length - 1].includes('(')) split.pop();\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\n    return split.join(' ');\n  };\n\n  const isFixed = () => {\n    switch (props.selectedPartType) {\n      case PartType.DRIVER:\n        return partContext.selectedDriverIsFixed;\n      case PartType.BODY:\n        return partContext.selectedBodyIsFixed;\n      case PartType.TIRE:\n        return partContext.selectedTireIsFixed;\n      case PartType.GLIDER:\n        return partContext.selectedGliderIsFixed;\n    }\n  };\n\n  const toggleFixed = (type: PartType) => {\n    isFixed() ? partContext.unsetFixed(type) : partContext.setFixed(type);\n  };\n\n  return (\n    <div className=\"PartSelection\">\n      <div\n        className=\"SelectedPart\"\n        style={{ background: color() }}\n        onClick={props.onClick}\n      >\n        <img\n          className=\"PartImage\"\n          src={props.selectedPart.img}\n          alt={props.selectedPart.name}\n        ></img>\n      </div>\n      <div\n        className=\"PartLock\"\n        style={{ background: lockButtonColor() }}\n        onClick={() => toggleFixed(props.selectedPartType)}\n      >\n        <p className=\"PartLabel\">{partName()}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PartSelection;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { Part, PartType } from '../../classes/Part';\nimport './PartTile.scss';\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected?: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#555';\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport PartTile from '../PartTile/PartTile';\nimport './PartList.scss';\n\ninterface PartListProps {\n  partList: Part[];\n  type: PartType;\n}\n\nconst PartList: React.FC<PartListProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const isSelected = (part: Part) => {\n    return (\n      part.name === partData.selectedDriver.name ||\n      part.name === partData.selectedBody.name ||\n      part.name === partData.selectedTire.name ||\n      part.name === partData.selectedGlider.name\n    );\n  };\n\n  return (\n    <div className=\"PartList\">\n      {new Array(props.partList.length).fill(0).map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={props.partList[index]}\n            type={props.type}\n            isSelected={isSelected(props.partList[index])}\n          ></PartTile>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PartList;\n","import React, { useState } from 'react';\n\nimport './KartConfig.scss';\nimport PartSelection from '../PartSelection/PartSelection';\nimport { Part, PartType } from '../../classes/Part';\nimport PartList from '../PartList/PartList';\nimport { PartContext } from '../../providers/PartProvider';\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n}\n\nexport const KartConfig: React.FC = () => {\n  const partData = React.useContext(PartContext);\n  const [state, setState] = useState<KartConfigState>({\n    selectedPartList: React.useContext(PartContext).drivers,\n  });\n\n  const show = (partList: Part[]) => {\n    setState({\n      selectedPartList: partList,\n    });\n  };\n\n  const partListType = (partList: Part[]): PartType => {\n    if (partList.length > 0) {\n      switch (partList[0].name) {\n        case 'Standard Kart':\n          return PartType.BODY;\n        case 'Standard':\n          return PartType.TIRE;\n        case 'Super Glider':\n          return PartType.GLIDER;\n        default:\n          return PartType.DRIVER;\n      }\n    }\n    return PartType.DRIVER;\n  };\n\n  const partList = (): Part[] => {\n    return state.selectedPartList.length === 0\n      ? partData.drivers\n      : state.selectedPartList;\n  };\n\n  const isSelectedCategory = (partList: Part[]): boolean => {\n    return partListType(partList) === partListType(state.selectedPartList);\n  };\n\n  return (\n    <div className=\"KartConfig\">\n      <div className=\"CenterContainer\">\n        <div className=\"PartOptions\">\n          <PartSelection\n            selectedPart={partData.selectedDriver}\n            selectedPartType={partListType(partData.drivers)}\n            isSelected={isSelectedCategory(partData.drivers)}\n            isFixed={partData.selectedDriverIsFixed}\n            onClick={() => show(partData.drivers)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedBody}\n            selectedPartType={partListType(partData.bodies)}\n            isSelected={isSelectedCategory(partData.bodies)}\n            isFixed={partData.selectedBodyIsFixed}\n            onClick={() => show(partData.bodies)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedTire}\n            selectedPartType={partListType(partData.tires)}\n            isSelected={isSelectedCategory(partData.tires)}\n            isFixed={partData.selectedTireIsFixed}\n            onClick={() => show(partData.tires)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedGlider}\n            selectedPartType={partListType(partData.gliders)}\n            isSelected={isSelectedCategory(partData.gliders)}\n            isFixed={partData.selectedGliderIsFixed}\n            onClick={() => show(partData.gliders)}\n          ></PartSelection>\n        </div>\n        <div className=\"Separator\"></div>\n        <PartList\n          partList={partList()}\n          type={partListType(partList())}\n        ></PartList>\n      </div>\n    </div>\n  );\n};\n","import { Part } from '../classes/Part';\n\nexport const sumOfStats = (parts: Part[]): number[] => {\n  const adjustStat = (stat: number): number => stat / 4 + 0.75;\n  return [\n    adjustStat(\n      parts\n        .map((part) => part.stats.groundSpeed)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.acceleration)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.weight)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.groundHandling)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part.stats.offRoadTraction)\n        .reduce((sum, current) => sum + current)\n    ),\n  ];\n};\n\nexport const statColor = (stat: number): string => {\n  const startColor = [38, 186, 255];\n  const endColor = [249, 36, 112];\n  const diffs = startColor.map((color, index) => endColor[index] - color);\n  const color = diffs.map(\n    (diff, index) => startColor[index] + diff * (stat / 6)\n  );\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n};\n","import React from 'react';\nimport { statColor } from '../../util/Common';\nimport './ProgressBar.scss';\n\ninterface ProgressBarProps {\n  label: String;\n  value: number;\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = (props) => {\n  let separators = [];\n  for (var i = 0; i < 23; i++) {\n    separators.push(\n      <div\n        key={`separator-${i}`}\n        className=\"VerticalSeparator\"\n        style={{ height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem' }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className=\"ProgressBar\">\n      <p>\n        {props.label}:{' '}\n        <span style={{ color: statColor(props.value) }}>\n          {+props.value.toFixed(2)}\n        </span>\n      </p>\n      <div className=\"Bar\">\n        <div\n          className=\"Progress\"\n          style={{ width: `${100 - props.value * (100 / 6)}%` }}\n        ></div>\n        <div className=\"SeparatorContainer\">{separators}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { sumOfStats } from '../../util/Common';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport './KartStats.scss';\n\nexport const KartStats: React.FC = () => {\n  const context = React.useContext(PartContext);\n  const stats = sumOfStats([\n    context.selectedDriver,\n    context.selectedBody,\n    context.selectedTire,\n    context.selectedGlider,\n  ]);\n\n  return (\n    <div className=\"PartStats\">\n      <ProgressBar label=\"Speed\" value={stats[0]}></ProgressBar>\n      <ProgressBar label=\"Acceleration\" value={stats[1]}></ProgressBar>\n      <ProgressBar label=\"Weight\" value={stats[2]}></ProgressBar>\n      <ProgressBar label=\"Handling\" value={stats[3]}></ProgressBar>\n      <ProgressBar label=\"Traction\" value={stats[4]}></ProgressBar>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Kart } from '../../classes/Kart';\nimport { PartContext } from '../../providers/PartProvider';\nimport { statColor, sumOfStats } from '../../util/Common';\nimport './KartCombo.scss';\n\ninterface KartComboProps {\n  kart: Kart;\n}\n\nconst KartCombo: React.FC<KartComboProps> = (props) => {\n  const context = React.useContext(PartContext);\n\n  const stats: JSX.Element[] = [];\n  const statLabels = ['S', 'A', 'W', 'H', 'T'];\n  const statValues =\n    props.kart.driver !== undefined\n      ? sumOfStats([\n          props.kart.driver,\n          props.kart.body,\n          props.kart.tire,\n          props.kart.glider,\n        ])\n      : [];\n  statLabels.forEach((value, index) =>\n    stats.push(\n      <p key={`kart-combo-${index}`}>\n        {value}:{' '}\n        <span style={{ color: statColor(statValues[index]) }}>\n          {statValues[index]}\n        </span>\n      </p>\n    )\n  );\n\n  return (\n    <div className=\"KartCombo\" onClick={() => context.setKart(props.kart)}>\n      <div className=\"Parts\">\n        <div className=\"KartComboPart\">\n          <img src={props.kart.driver.img} alt=\"Driver\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.body.img} alt=\"Body\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.tire.img} alt=\"Tire\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.glider.img} alt=\"Glider\"></img>\n        </div>\n      </div>\n      <div className=\"Stats\">{stats}</div>\n    </div>\n  );\n};\n\nexport default KartCombo;\n","import React from 'react';\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n} from 'react-sortable-hoc';\nimport {\n  StatNames,\n  StatPriorityContext,\n} from '../../providers/StatPriorityProvider';\nimport './StatPriority.scss';\n\nconst StatPriority: React.FC = () => {\n  const context = React.useContext(StatPriorityContext);\n  const COLOR_TOP_PRIORITY = '#f92470';\n  const COLOR_REGULAR_PRIORITY = '#777';\n  const COLOR_PRIORITY_BAR = '#26baff';\n\n  const statColor = (index: number) => {\n    if (index < context.statPriority.indexOf(StatNames.PRIORITY)) {\n      return COLOR_TOP_PRIORITY;\n    } else if (index > context.statPriority.indexOf(StatNames.PRIORITY)) {\n      return COLOR_REGULAR_PRIORITY;\n    } else {\n      return COLOR_PRIORITY_BAR;\n    }\n  };\n\n  const SortableItem = SortableElement(({ value, currentIndex }: any) => (\n    <div className=\"Stat\" style={{ background: statColor(currentIndex) }}>\n      <p>{value}</p>\n    </div>\n  ));\n\n  const SortableList = SortableContainer(({ items }: any) => {\n    return (\n      <ul>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            currentIndex={index}\n            value={value}\n          ></SortableItem>\n        ))}\n      </ul>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\n    context.setNewStatPriority(\n      arrayMove(context.statPriority, oldIndex, newIndex)\n    );\n  };\n\n  return (\n    <div className=\"StatPriority\">\n      <SortableList\n        items={context.statPriority}\n        onSortEnd={onSortEnd}\n      ></SortableList>\n    </div>\n  );\n};\n\nexport default StatPriority;\n","import { StatNames } from '../providers/StatPriorityProvider';\nimport { sumOfStats } from '../util/Common';\nimport { Part } from './Part';\nimport { ReducedStats, Stats } from './Stats';\n\nexport class Kart {\n  public stats: Stats;\n\n  constructor(\n    readonly driver: Part,\n    readonly body: Part,\n    readonly tire: Part,\n    readonly glider: Part\n  ) {\n    const sum = sumOfStats([driver, body, tire, glider]);\n    this.stats = ReducedStats(sum[0], sum[1], sum[2], sum[3], sum[4]);\n  }\n\n  getStat(stat: StatNames): number {\n    switch (stat) {\n      case StatNames.SPEED:\n        return this.stats.groundSpeed;\n      case StatNames.ACCELERATION:\n        return this.stats.acceleration;\n      case StatNames.WEIGHT:\n        return this.stats.weight;\n      case StatNames.HANDLING:\n        return this.stats.groundHandling;\n      case StatNames.TRACTION:\n        return this.stats.offRoadTraction;\n      default:\n        return 0;\n    }\n  }\n\n  getStats(stats: StatNames[]): number[] {\n    return stats.map((stat) => this.getStat(stat));\n  }\n}\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport KartCombo from '../KartCombo/KartCombo';\nimport './Optimizer.scss';\nimport StatPriority from '../StatPriority/StatPriority';\nimport {\n  StatNames,\n  StatPriorityContext,\n} from '../../providers/StatPriorityProvider';\nimport { Kart } from '../../classes/Kart';\nimport { Part } from '../../classes/Part';\n\nconst Optimizer: React.FC = () => {\n  const partContext = React.useContext(PartContext);\n  const statPriorityContext = React.useContext(StatPriorityContext);\n\n  const absDiff = (part: Part | Kart, priority: StatNames[]): number => {\n    let mean =\n      part.getStats(priority).reduce((sum, value) => (sum += value)) /\n      priority.length;\n    return part\n      .getStats(priority)\n      .map((value) => Math.abs(value - mean))\n      .reduce((sum, value) => (sum += value));\n  };\n\n  const sumOfPriorityStats = (\n    part: Part | Kart,\n    priority: StatNames[]\n  ): number => {\n    return priority\n      .map((stat) => part.getStat(stat))\n      .reduce((sum, value) => (sum += value));\n  };\n\n  const compareRegularStats = (\n    part1: Part | Kart,\n    part2: Part | Kart,\n    regular: StatNames[],\n    index: number = 0\n  ): number => {\n    if (index < regular.length) {\n      const kart1Stat = part1.getStat(regular[index]);\n      const kart2Stat = part2.getStat(regular[index]);\n      if (kart1Stat < kart2Stat) {\n        return 1;\n      } else if (kart1Stat > kart2Stat) {\n        return -1;\n      } else {\n        return compareRegularStats(part1, part2, regular, index + 1);\n      }\n    } else return 0;\n  };\n\n  const comparePriorityStats = (\n    part1: Part | Kart,\n    part2: Part | Kart,\n    priority: StatNames[],\n    regular: StatNames[],\n    index: number = 0\n  ): number => {\n    if (index < regular.length) {\n      const kart1Stat = part1.getStat(priority[index]);\n      const kart2Stat = part2.getStat(priority[index]);\n      if (kart1Stat < kart2Stat) {\n        return 1;\n      } else if (kart1Stat > kart2Stat) {\n        return -1;\n      } else {\n        return comparePriorityStats(part1, part2, priority, regular, index + 1);\n      }\n    } else return compareRegularStats(part1, part2, regular);\n  };\n\n  const compareAbsDiff = (\n    part1: Part | Kart,\n    part2: Part | Kart,\n    priority: StatNames[],\n    regular: StatNames[]\n  ): number => {\n    const kart1AbsDiff = absDiff(part1, priority);\n    const kart2AbsDiff = absDiff(part2, priority);\n    if (kart1AbsDiff < kart2AbsDiff) {\n      return -1;\n    } else if (kart1AbsDiff > kart2AbsDiff) {\n      return 1;\n    } else {\n      return comparePriorityStats(part1, part2, priority, regular);\n    }\n  };\n\n  const compareStats = (\n    value1: Part | Kart,\n    value2: Part | Kart,\n    priority: StatNames[],\n    regular: StatNames[]\n  ): number => {\n    if (priority.length !== 0) {\n      const part1StatSum = sumOfPriorityStats(value1, priority);\n      const part2StatSum = sumOfPriorityStats(value2, priority);\n      if (part1StatSum < part2StatSum) {\n        return 1;\n      } else if (part1StatSum > part2StatSum) {\n        return -1;\n      } else {\n        return compareAbsDiff(value1, value2, priority, regular);\n      }\n    } else {\n      return compareRegularStats(value1, value2, regular);\n    }\n  };\n\n  const topParts = (\n    partList: Part[],\n    priority: StatNames[],\n    regular: StatNames[],\n    count: number\n  ): Part[] => {\n    return partList\n      .slice()\n      .sort((part1, part2) => compareStats(part1, part2, priority, regular))\n      .slice(0, count);\n  };\n\n  const topPartCount = (): number => {\n    var count = 3;\n    count += partContext.selectedDriverIsFixed ? 1 : 0; // 4\n    count += partContext.selectedBodyIsFixed ? 4 : 0; // 8\n    count += partContext.selectedTireIsFixed ? 56 : 0; // 64\n    return count;\n  };\n\n  const topKarts = (prioritySplit: number): Kart[] => {\n    const priority = statPriorityContext.statPriority.slice(0, prioritySplit);\n    const regular = statPriorityContext.statPriority.slice(prioritySplit + 1);\n    const count = topPartCount();\n    const topDrivers = partContext.selectedDriverIsFixed\n      ? [partContext.selectedDriver]\n      : topParts(partContext.drivers, priority, regular, count);\n    const topBodies = partContext.selectedBodyIsFixed\n      ? [partContext.selectedBody]\n      : topParts(partContext.bodies, priority, regular, count);\n    const topTires = partContext.selectedTireIsFixed\n      ? [partContext.selectedTire]\n      : topParts(partContext.tires, priority, regular, count);\n    const topGliders = partContext.selectedGliderIsFixed\n      ? [partContext.selectedGlider]\n      : topParts(partContext.gliders, priority, regular, count);\n\n    const karts: Kart[] = [];\n    topDrivers.forEach((driver) => {\n      topBodies.forEach((body) => {\n        topTires.forEach((tire) => {\n          topGliders.forEach((glider) => {\n            karts.push(new Kart(driver, body, tire, glider));\n          });\n        });\n      });\n    });\n    karts.sort((kart1, kart2) => compareStats(kart1, kart2, priority, regular));\n\n    return karts;\n  };\n\n  return (\n    <div className=\"Optimizer\">\n      <StatPriority></StatPriority>\n      <div className=\"Options\">\n        {topKarts(\n          statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)\n        ).map((kart, index) => (\n          <KartCombo key={`kart-${index}`} kart={kart}></KartCombo>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Optimizer;\n","import React, { Component } from 'react';\nimport { KartStats } from '../KartStats/KartStats';\nimport Optimizer from '../Optimizer/Optimizer';\nimport './Sidebar.scss';\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <KartStats></KartStats>\n        <Optimizer></Optimizer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport './KartOptimizerApp.scss';\nimport { KartConfig } from './components/KartConfig/KartConfig';\nimport PartProvider from './providers/PartProvider';\nimport StatPriorityProvider from './providers/StatPriorityProvider';\nimport Sidebar from './components/Sidebar/Sidebar';\n\nexport default class KartOptimizerApp extends Component {\n  render() {\n    return (\n      <StatPriorityProvider>\n        <PartProvider>\n          <div className=\"KartOptimizerApp\">\n            <Header></Header>\n            <KartConfig></KartConfig>\n            <Sidebar></Sidebar>\n          </div>\n        </PartProvider>\n      </StatPriorityProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport KartOptimizerApp from './KartOptimizerApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}