{"version":3,"sources":["components/PartTile/Part.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/PartSelection/PartSelection.tsx","components/KartConfig/KartConfig.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","views/main/KartOptimizerApp.tsx","index.tsx"],"names":["PartType","Header","className","src","mk8","alt","Component","PartTile","onClick","this","props","part","img","PartList","parts","Array","partList","length","fill","map","_","index","callbackFunc","type","PartSelection","selectedPart","name","partName","split","includes","pop","join","KartConfig","selectPart","DRIVER","setState","selectedDriver","BODY","selectedBody","TIRE","selectedTire","GLIDER","selectedGlider","state","selectedPartList","drivers","bodies","tires","gliders","show","ProgressBar","separators","i","push","style","height","label","barWidth","toFixed","width","value","KartStats","speed","acceleration","weight","handling","traction","stats","groundSpeed","groundHandling","offRoadTraction","KartOptimizerApp","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.601c4184.chunk.js","sourcesContent":["import { Stats } from \"../KartConfig/Stats\";\n\nexport class Part {\n  constructor(\n    readonly name: string,\n    readonly img: string,\n    readonly stats: Stats\n  ) {}\n}\n\nexport enum PartType {\n  DRIVER = \"Driver\",\n  BODY = \"Body\",\n  TIRE = \"Tire\",\n  GLIDER = \"Glider\",\n}\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from \"react\";\nimport \"./Header.scss\";\nimport mk8 from \"./MarioKart8.webp\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, MouseEventHandler } from \"react\";\nimport { Part } from \"./Part\";\nimport \"./PartTile.scss\";\n\nexport default class PartTile extends Component<{\n  part: Part;\n  onClick: MouseEventHandler;\n}> {\n  render() {\n    return (\n      <div className=\"PartTile\" onClick={this.props.onClick}>\n        <img className=\"PartImage\" src={this.props.part.img} alt=\"Part\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Part, PartType } from \"../PartTile/Part\";\nimport PartTile from \"../PartTile/PartTile\";\nimport \"./PartList.scss\";\n\nexport default class PartList extends Component<{\n  partList: Part[];\n  type: PartType;\n  callbackFunc: Function;\n}> {\n  render() {\n    var parts = new Array(this.props.partList.length)\n      .fill(0)\n      .map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={this.props.partList[index]}\n            onClick={() =>\n              this.props.callbackFunc(\n                this.props.partList[index],\n                this.props.type\n              )\n            }\n          ></PartTile>\n        );\n      });\n    return <div className=\"PartList\">{parts}</div>;\n  }\n}\n","import React, { Component, MouseEventHandler } from \"react\";\nimport { Part } from \"../PartTile/Part\";\nimport \"./PartSelection.scss\";\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  onClick: MouseEventHandler;\n}\n\nexport default class PartSelection extends Component<PartSelectionProps> {\n  render() {\n    return (\n      <div className=\"PartSelection\" onClick={this.props.onClick}>\n        <div className=\"SelectedPart\">\n          <img className=\"PartImage\"\n            src={this.props.selectedPart.img}\n            alt={this.props.selectedPart.name}\n          ></img>\n        </div>\n        <p className=\"PartLabel\">{this.partName()}</p>\n      </div>\n    );\n  }\n\n  partName() {\n    let split = this.props.selectedPart.name.split(' ')\n    if (split[split.length - 1].includes('(')) split.pop()\n    if (split.length >= 2) return `${split[0]} ${split[1]}`\n    return split.join(' ')\n  }\n}\n","import React, { Component } from \"react\";\n\nimport drivers from \"./json/drivers.json\";\nimport bodies from \"./json/bodies.json\";\nimport tires from \"./json/tires.json\";\nimport gliders from \"./json/gliders.json\";\nimport \"./KartConfig.scss\";\nimport PartList from \"../PartList/PartList\";\nimport PartSelection from \"../PartSelection/PartSelection\";\nimport { Part, PartType } from \"../PartTile/Part\";\n\ninterface KartConfigProps {\n  callbackFunc: Function\n}\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n}\n\nexport default class KartConfig extends Component<KartConfigProps, KartConfigState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedPartList: drivers,\n      selectedDriver: drivers[0],\n      selectedBody: bodies[0],\n      selectedTire: tires[0],\n      selectedGlider: gliders[0],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"KartConfig\">\n        <div className=\"CenterContainer\">\n          <div className=\"PartOptions\">\n            <PartSelection\n              selectedPart={this.state.selectedDriver}\n              onClick={() => this.show(drivers)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedBody}\n              onClick={() => this.show(bodies)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedTire}\n              onClick={() => this.show(tires)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedGlider}\n              onClick={() => this.show(gliders)}\n            ></PartSelection>\n          </div>\n          <div className=\"Separator\"></div>\n          <PartList\n            partList={this.state.selectedPartList}\n            type={this.type()}\n            callbackFunc={this.selectPart}\n          ></PartList>\n        </div>\n      </div>\n    );\n  }\n\n  show(partList: Part[]) {\n    this.setState({\n      selectedPartList: partList,\n    });\n  }\n\n  type(): PartType {\n    switch (this.state.selectedPartList) {\n      case drivers:\n        return PartType.DRIVER;\n      case bodies:\n        return PartType.BODY;\n      case tires:\n        return PartType.TIRE;\n      case gliders:\n        return PartType.GLIDER;\n      default:\n        return PartType.DRIVER;\n    }\n  }\n\n  selectPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER: this.setState({ selectedDriver: part }); break;\n      case PartType.BODY: this.setState({ selectedBody: part }); break;\n      case PartType.TIRE: this.setState({ selectedTire: part }); break;\n      case PartType.GLIDER: this.setState({ selectedGlider: part }); break;\n    }\n    this.props.callbackFunc(part, type)\n  };\n}\n","import React, { Component } from 'react'\nimport './ProgressBar.scss'\n\ninterface ProgressBarProps {\n  label: String,\n  value: number,\n}\n\nexport default class ProgressBar extends Component<ProgressBarProps> {\n  render() {\n    let separators = []\n    for (var i = 0; i < 23; i++) {\n      separators.push(<div key={i} className=\"VerticalSeparator\" style={{height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem'}}></div>)\n    }\n    return (\n      <div className=\"ProgressBar\">\n        <p>{this.props.label}: {+(this.barWidth() / (100 / 6)).toFixed(2)}</p>\n        <div className=\"Bar\">\n          <div className=\"Progress\" style={{width: `${this.barWidth()}%`}}></div>\n          <div className=\"SeparatorContainer\">{separators}</div>\n        </div>\n      </div>\n    )\n  }\n\n  barWidth(): number {\n    return this.props.value * (100 / 24) + 12.5\n  }\n}\n","import React, { Component } from 'react'\nimport { Part } from '../PartTile/Part'\nimport ProgressBar from '../ProgressBar/ProgressBar'\nimport './KartStats.scss'\n\ninterface KartStatsProps {\n  selectedDriver: Part,\n  selectedBody: Part,\n  selectedTire: Part,\n  selectedGlider: Part,\n}\n\nexport default class KartStats extends Component<KartStatsProps> {\n  render() {\n    return (\n      <div className=\"PartStats\">\n        <div className=\"StatsContainer\">\n          <ProgressBar label=\"Speed\" value={this.speed()}></ProgressBar>\n          <ProgressBar label=\"Acceleration\" value={this.acceleration()}></ProgressBar>\n          <ProgressBar label=\"Weight\" value={this.weight()}></ProgressBar>\n          <ProgressBar label=\"Handling\" value={this.handling()}></ProgressBar>\n          <ProgressBar label=\"Traction\" value={this.traction()}></ProgressBar>\n        </div>\n      </div>\n    )\n  }\n\n  speed(): number {\n    return this.props.selectedDriver.stats.groundSpeed +\n      this.props.selectedBody.stats.groundSpeed +\n      this.props.selectedTire.stats.groundSpeed +\n      this.props.selectedGlider.stats.groundSpeed\n  }\n\n  acceleration(): number {\n    return this.props.selectedDriver.stats.acceleration +\n      this.props.selectedBody.stats.acceleration +\n      this.props.selectedTire.stats.acceleration +\n      this.props.selectedGlider.stats.acceleration\n  }\n\n  weight(): number {\n    return this.props.selectedDriver.stats.weight +\n      this.props.selectedBody.stats.weight +\n      this.props.selectedTire.stats.weight +\n      this.props.selectedGlider.stats.weight\n  }\n\n  handling(): number {\n    return this.props.selectedDriver.stats.groundHandling +\n      this.props.selectedBody.stats.groundHandling +\n      this.props.selectedTire.stats.groundHandling +\n      this.props.selectedGlider.stats.groundHandling\n  }\n\n  traction(): number {\n    return this.props.selectedDriver.stats.offRoadTraction +\n      this.props.selectedBody.stats.offRoadTraction +\n      this.props.selectedTire.stats.offRoadTraction +\n      this.props.selectedGlider.stats.offRoadTraction\n  }\n}\n","import React, { Component } from 'react'\nimport Header from '../../components/Header/Header'\nimport KartConfig from '../../components/KartConfig/KartConfig'\nimport KartStats from '../../components/KartStats/KartStats'\nimport { Part, PartType } from '../../components/PartTile/Part'\nimport './KartOptimizerApp.scss'\nimport drivers from \"../../components/KartConfig/json/drivers.json\";\nimport bodies from \"../../components/KartConfig/json/bodies.json\";\nimport tires from \"../../components/KartConfig/json/tires.json\";\nimport gliders from \"../../components/KartConfig/json/gliders.json\";\n\ninterface KartOptimizerAppState {\n  selectedDriver: Part,\n  selectedBody: Part,\n  selectedTire: Part,\n  selectedGlider: Part\n}\n\nexport default class KartOptimizerApp extends Component<{}, KartOptimizerAppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedDriver: drivers[0],\n      selectedBody: bodies[0],\n      selectedTire: tires[0],\n      selectedGlider: gliders[0],\n    }\n  }\n  \n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"KartOptimizerApp\">\n        <Header></Header>\n        <KartConfig callbackFunc={this.selectPart}></KartConfig>\n        <KartStats\n          selectedDriver={this.state.selectedDriver}\n          selectedBody={this.state.selectedBody}\n          selectedTire={this.state.selectedTire}\n          selectedGlider={this.state.selectedGlider}\n        ></KartStats>\n      </div>\n    )\n  }\n\n  selectPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER: this.setState({selectedDriver: part}); break;\n      case PartType.BODY: this.setState({selectedBody: part}); break;\n      case PartType.TIRE: this.setState({selectedTire: part}); break;\n      case PartType.GLIDER: this.setState({selectedGlider: part}); break;\n    }\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport KartOptimizerApp from \"./views/main/KartOptimizerApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}