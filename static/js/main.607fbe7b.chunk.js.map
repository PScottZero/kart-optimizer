{"version":3,"sources":["providers/StatPriorityProvider.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","classes/Stats.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartSelection/PartSelection.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","util/Common.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","components/KartCombo/KartCombo.tsx","classes/TopKartsRequest.tsx","components/StatPriority/StatPriority.tsx","components/Optimizer/Optimizer.tsx","components/Sidebar/Sidebar.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["StatNames","Header","className","src","mk8","alt","Component","SpeedHandlingTerrain","TractionTerrain","defaultStatPriorityData","statPriority","SPEED","ACCELERATION","PRIORITY","WEIGHT","HANDLING","TRACTION","setNewStatPriority","console","log","StatPriorityContext","React","createContext","StatPriorityProvider","props","children","useState","setStatPriority","data","useEffect","Provider","value","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","name","img","stats","stat","this","map","getStat","AWS_URL","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","driverIsFixed","bodyIsFixed","tireIsFixed","gliderIsFixed","topKarts","topKartsLoaded","setPart","part","type","setKart","kart","getTopKarts","request","toggleFixed","PartContext","PartProvider","partData","setPartData","DRIVER","BODY","TIRE","GLIDER","driver","body","tire","glider","getPartList","endpoint","a","fetch","method","headers","response","ok","text","then","jsonString","JSON","parse","stringify","PartSelection","partContext","useContext","isFixed","selectedPartType","style","background","isSelected","undefined","selectedPart","onClick","split","length","includes","pop","join","partName","PartTile","PartList","Array","partList","fill","_","index","KartConfig","selectedPartList","state","setState","show","partListType","isSelectedCategory","sumOfStats","parts","adjustStat","reduce","sum","current","statColor","startColor","endColor","color","diff","ProgressBar","separators","i","push","height","label","toFixed","width","KartStats","context","KartCombo","statValues","forEach","TopKartsRequest","fixedDriver","fixedBody","fixedTire","fixedGlider","priorityStats","regularStats","kartCount","StatPriority","statPriorityContext","SortableItem","SortableElement","currentIndex","indexOf","SortableList","SortableContainer","items","onSortEnd","oldIndex","newIndex","arrayMove","prioritySplit","priority","slice","regular","Optimizer","Sidebar","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.607fbe7b.chunk.js","sourcesContent":["import React from 'react';\n\ninterface StatPriorityData {\n  statPriority: StatNames[];\n  setNewStatPriority: (statPriority: StatNames[]) => void;\n}\n\nexport enum StatNames {\n  SPEED = 'Speed',\n  ACCELERATION = 'Acceleration',\n  WEIGHT = 'Weight',\n  HANDLING = 'Handling',\n  TRACTION = 'Traction',\n  PRIORITY = '',\n}\n\nconst defaultStatPriorityData = {\n  statPriority: [\n    StatNames.SPEED,\n    StatNames.ACCELERATION,\n    StatNames.PRIORITY,\n    StatNames.WEIGHT,\n    StatNames.HANDLING,\n    StatNames.TRACTION,\n  ],\n  setNewStatPriority: (statPriority: StatNames[]) => console.log(statPriority),\n};\n\nexport const StatPriorityContext = React.createContext<StatPriorityData>(\n  defaultStatPriorityData\n);\n\nconst StatPriorityProvider: React.FC = (props) => {\n  const { children } = props;\n  const [statPriority, setStatPriority] = React.useState(\n    defaultStatPriorityData\n  );\n\n  const setNewStatPriority = (statPriority: StatNames[]) => {\n    setStatPriority((data) => {\n      return { ...data, statPriority: statPriority };\n    });\n  };\n\n  React.useEffect(() => {\n    setStatPriority((data) => {\n      return { ...data, setNewStatPriority: setNewStatPriority };\n    });\n  }, []);\n\n  return (\n    <StatPriorityContext.Provider value={statPriority}>\n      {children}\n    </StatPriorityContext.Provider>\n  );\n};\n\nexport default StatPriorityProvider;\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport mk8 from './MarioKart8.webp';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SpeedHandlingTerrain {\n  GROUND = 'Ground',\n  WATER = 'Water',\n  ANTI_GRAVITY = 'Anti-Gravity',\n  AIR = 'Air',\n}\n\nexport enum TractionTerrain {\n  ON_ROAD = 'On-Road',\n  OFF_ROAD = 'Off-Road',\n}\n\nexport class Stats {\n  constructor(\n    readonly weight: number = 0,\n    readonly acceleration: number = 0,\n    readonly onRoadTraction: number = 0,\n    readonly offRoadTraction: number = 0,\n    readonly miniTurbo: number = 0,\n    readonly groundSpeed: number = 0,\n    readonly waterSpeed: number = 0,\n    readonly antiGravitySpeed: number = 0,\n    readonly airSpeed: number = 0,\n    readonly groundHandling: number = 0,\n    readonly waterHandling: number = 0,\n    readonly antiGravityHandling: number = 0,\n    readonly airHandling: number = 0\n  ) {}\n}\n\nexport const ReducedStats = (\n  speed: number,\n  acceleration: number,\n  weight: number,\n  handling: number,\n  traction: number\n) => {\n  return new Stats(\n    weight,\n    acceleration,\n    0,\n    traction,\n    0,\n    speed,\n    0,\n    0,\n    0,\n    handling,\n    0,\n    0,\n    0\n  );\n};\n","import { StatNames } from '../providers/StatPriorityProvider';\nimport { Stats } from './Stats';\n\nexport class Part {\n  constructor(\n    readonly name: string = '',\n    readonly img: string = '',\n    readonly stats: Stats = new Stats()\n  ) {}\n\n  getStat(stat: StatNames): number {\n    switch (stat) {\n      case StatNames.SPEED:\n        return this.stats.groundSpeed;\n      case StatNames.ACCELERATION:\n        return this.stats.acceleration;\n      case StatNames.WEIGHT:\n        return this.stats.weight;\n      case StatNames.HANDLING:\n        return this.stats.groundHandling;\n      case StatNames.TRACTION:\n        return this.stats.offRoadTraction;\n      default:\n        return 0;\n    }\n  }\n\n  getStats(stats: StatNames[]): number[] {\n    return stats.map((stat) => this.getStat(stat));\n  }\n}\n\nexport enum PartType {\n  DRIVER = 'Driver',\n  BODY = 'Body',\n  TIRE = 'Tire',\n  GLIDER = 'Glider',\n}\n","import React from 'react';\nimport { Part, PartType } from '../classes/Part';\nimport { Kart } from '../classes/Kart';\nimport { TopKartsRequest } from '../classes/TopKartsRequest';\n\nconst AWS_URL = process.env.NODE_ENV === 'production'\n  ? 'http://kart-optimizer-backend.us-east-2.elasticbeanstalk.com'\n  : 'http://localhost:8080';\n\nexport interface PartData {\n  drivers: Part[];\n  bodies: Part[];\n  tires: Part[];\n  gliders: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n  driverIsFixed: boolean;\n  bodyIsFixed: boolean;\n  tireIsFixed: boolean;\n  gliderIsFixed: boolean;\n  topKarts: Kart[];\n  topKartsLoaded: boolean;\n  setPart: (part: Part, type: PartType) => void;\n  setKart: (kart: Kart) => void;\n  getTopKarts: (request: TopKartsRequest) => void;\n  toggleFixed: (type: PartType) => void;\n}\n\nexport const defaultPartData: PartData = {\n  drivers: [],\n  bodies: [],\n  tires: [],\n  gliders: [],\n  selectedDriver: new Part(),\n  selectedBody: new Part(),\n  selectedTire: new Part(),\n  selectedGlider: new Part(),\n  driverIsFixed: false,\n  bodyIsFixed: false,\n  tireIsFixed: false,\n  gliderIsFixed: false,\n  topKarts: [],\n  topKartsLoaded: true,\n  setPart: (part: Part, type: PartType) => console.log(part, type),\n  setKart: (kart: Kart) => console.log(kart),\n  getTopKarts: (request: TopKartsRequest) => { console.log(request) },\n  toggleFixed: (type: PartType) => console.log(type)\n};\n\nexport const PartContext = React.createContext<PartData>(defaultPartData);\n\nconst PartProvider: React.FC = (props) => {\n  const { children } = props;\n  const [partData, setPartData] = React.useState(defaultPartData);\n\n  const setPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return { ...data, selectedDriver: part };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return { ...data, selectedBody: part };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return { ...data, selectedTire: part };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return { ...data, selectedGlider: part };\n        });\n        break;\n    }\n  };\n\n  const setKart = (kart: Kart) => {\n    setPartData((data) => {\n      return {\n        ...data,\n        selectedDriver: kart.driver,\n        selectedBody: kart.body,\n        selectedTire: kart.tire,\n        selectedGlider: kart.glider,\n      };\n    });\n  };\n\n  const toggleFixed = (type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return {\n            ...data,\n            driverIsFixed: !data.driverIsFixed,\n          };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return {\n            ...data,\n            bodyIsFixed: !data.bodyIsFixed,\n          };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return {\n            ...data,\n            tireIsFixed: !data.tireIsFixed,\n          };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return {\n            ...data,\n            gliderIsFixed: !data.gliderIsFixed,\n          };\n        });\n        break;\n    }\n  };\n\n  const getPartList = async (endpoint: string): Promise<Part[]> => {\n    try {\n      console.log(AWS_URL)\n      const response = await fetch(AWS_URL + endpoint, {\n        method: 'GET',\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      if (response.ok) {\n        return response\n          .text()\n          .then((jsonString) => JSON.parse(jsonString) as Part[]);\n      } else {\n        return [];\n      }\n    } catch (error) {\n      return [];\n    }\n  };\n\n  const getTopKarts = async (request: TopKartsRequest) => {\n    setPartData(data => {\n      return {\n        ...data,\n        topKartsLoaded: false\n      }\n    });\n    try {\n      const response = await fetch(`${AWS_URL}/topKarts`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        body: JSON.stringify(request),\n      });\n      if (response.ok) {\n        response.text().then((jsonString) => {\n          const topKarts: Kart[] = JSON.parse(jsonString);\n          setPartData((data) => {\n            return {\n              ...data,\n              topKarts: topKarts,\n              topKartsLoaded: true\n            };\n          });\n        });\n      }\n    } catch {\n      return\n    }\n  }\n\n  React.useEffect(() => {\n    setPartData({\n      drivers: [],\n      bodies: [],\n      tires: [],\n      gliders: [],\n      selectedDriver: new Part(),\n      selectedBody: new Part(),\n      selectedTire: new Part(),\n      selectedGlider: new Part(),\n      driverIsFixed: false,\n      bodyIsFixed: false,\n      tireIsFixed: false,\n      gliderIsFixed: false,\n      topKarts: [],\n      topKartsLoaded: true,\n      setPart: setPart,\n      setKart: setKart,\n      getTopKarts: getTopKarts,\n      toggleFixed: toggleFixed\n    });\n    getPartList('/drivers').then((drivers) =>\n      setPartData((data) => {\n        return {\n          ...data,\n          drivers: drivers,\n          selectedDriver: drivers[0],\n        };\n      })\n    );\n    getPartList('/bodies').then((bodies) => {\n      setPartData((data) => {\n        return {\n          ...data,\n          bodies: bodies,\n          selectedBody: bodies[0],\n        };\n      });\n    });\n    getPartList('/tires').then((tires) => {\n      setPartData((data) => {\n        return {\n          ...data,\n          tires: tires,\n          selectedTire: tires[0],\n        };\n      });\n    });\n    getPartList('/gliders').then((gliders) => {\n      setPartData((data) => {\n        return {\n          ...data,\n          gliders: gliders,\n          selectedGlider: gliders[0],\n        };\n      });\n    });\n  }, []);\n\n  return (\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\n  );\n};\n\nexport default PartProvider;\n","import React, { MouseEventHandler } from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport './PartSelection.scss';\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  selectedPartType: PartType;\n  isSelected: boolean;\n  isFixed: boolean;\n  onClick: MouseEventHandler;\n}\n\nconst PartSelection: React.FC<PartSelectionProps> = (props) => {\n  const partContext = React.useContext(PartContext);\n\n  const backgroundColor = (): string => {\n    return props.isSelected && props.selectedPart !== undefined\n      ? '#26baff'\n      : '#777';\n  };\n\n  const lockButtonColor = (): string => {\n    return isFixed() ? '#f92470' : '#26baff';\n  };\n\n  const partName = (): string => {\n    let split = props.selectedPart.name.split(' ');\n    if (split[split.length - 1].includes('(')) split.pop();\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\n    return split.join(' ');\n  };\n\n  const isFixed = () => {\n    switch (props.selectedPartType) {\n      case PartType.DRIVER:\n        return partContext.driverIsFixed;\n      case PartType.BODY:\n        return partContext.bodyIsFixed;\n      case PartType.TIRE:\n        return partContext.tireIsFixed;\n      case PartType.GLIDER:\n        return partContext.gliderIsFixed;\n    }\n  };\n\n  const toggleFixed = (type: PartType) => partContext.toggleFixed(type);\n\n  return (\n    <div className=\"PartSelection\">\n      <div\n        className=\"SelectedPart\"\n        style={{ background: backgroundColor() }}\n        onClick={props.onClick}\n      >\n        <img\n          className=\"PartImage\"\n          src={props.selectedPart !== undefined ? props.selectedPart.img : ''}\n          alt={props.selectedPart !== undefined ? props.selectedPart.name : ''}\n        ></img>\n      </div>\n      <div\n        className=\"PartLock\"\n        style={{ background: lockButtonColor() }}\n        onClick={() =>\n          props.selectedPart !== undefined\n            ? toggleFixed(props.selectedPartType)\n            : {}\n        }\n      >\n        <p className=\"PartLabel\">\n          {props.selectedPart !== undefined ? partName() : 'None'}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PartSelection;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { Part, PartType } from '../../classes/Part';\nimport './PartTile.scss';\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected?: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#555';\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport PartTile from '../PartTile/PartTile';\nimport './PartList.scss';\n\ninterface PartListProps {\n  partList: Part[];\n  type: PartType;\n}\n\nconst PartList: React.FC<PartListProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const isSelected = (part: Part) => {\n    return (\n      part.name === partData.selectedDriver.name ||\n      part.name === partData.selectedBody.name ||\n      part.name === partData.selectedTire.name ||\n      part.name === partData.selectedGlider.name\n    );\n  };\n\n  return (\n    <div className=\"PartList\">\n      {new Array(props.partList.length).fill(0).map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={props.partList[index]}\n            type={props.type}\n            isSelected={isSelected(props.partList[index])}\n          ></PartTile>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PartList;\n","import React, { useState } from 'react';\n\nimport './KartConfig.scss';\nimport PartSelection from '../PartSelection/PartSelection';\nimport { Part, PartType } from '../../classes/Part';\nimport PartList from '../PartList/PartList';\nimport { PartContext } from '../../providers/PartProvider';\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n}\n\nexport const KartConfig: React.FC = () => {\n  const partData = React.useContext(PartContext);\n  const [state, setState] = useState<KartConfigState>({\n    selectedPartList: React.useContext(PartContext).drivers,\n  });\n\n  const show = (partList: Part[]) => {\n    setState({\n      selectedPartList: partList,\n    });\n  };\n\n  const partListType = (partList: Part[]): PartType => {\n    if (partList.length > 0) {\n      switch (partList[0].name) {\n        case 'Standard Kart':\n          return PartType.BODY;\n        case 'Standard':\n          return PartType.TIRE;\n        case 'Super Glider':\n          return PartType.GLIDER;\n        default:\n          return PartType.DRIVER;\n      }\n    }\n    return PartType.DRIVER;\n  };\n\n  const partList = (): Part[] => {\n    return state.selectedPartList.length === 0\n      ? partData.drivers\n      : state.selectedPartList;\n  };\n\n  const isSelectedCategory = (partList: Part[]): boolean => {\n    return partListType(partList) === partListType(state.selectedPartList);\n  };\n\n  return (\n    <div className=\"KartConfig\">\n      <div className=\"CenterContainer\">\n        <div className=\"PartOptions\">\n          <PartSelection\n            selectedPart={partData.selectedDriver}\n            selectedPartType={partListType(partData.drivers)}\n            isSelected={isSelectedCategory(partData.drivers)}\n            isFixed={partData.driverIsFixed}\n            onClick={() => show(partData.drivers)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedBody}\n            selectedPartType={partListType(partData.bodies)}\n            isSelected={isSelectedCategory(partData.bodies)}\n            isFixed={partData.bodyIsFixed}\n            onClick={() => show(partData.bodies)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedTire}\n            selectedPartType={partListType(partData.tires)}\n            isSelected={isSelectedCategory(partData.tires)}\n            isFixed={partData.tireIsFixed}\n            onClick={() => show(partData.tires)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedGlider}\n            selectedPartType={partListType(partData.gliders)}\n            isSelected={isSelectedCategory(partData.gliders)}\n            isFixed={partData.gliderIsFixed}\n            onClick={() => show(partData.gliders)}\n          ></PartSelection>\n        </div>\n        <div className=\"Separator\"></div>\n        {partList().length !== 0 ? (\n          <PartList\n            partList={partList()}\n            type={partListType(partList())}\n          ></PartList>\n        ) : (\n          <p className=\"NoBackend\">Loading List...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Part } from '../classes/Part';\n\nexport const sumOfStats = (parts: Part[]): number[] => {\n  const adjustStat = (stat: number): number => stat / 4 + 0.75;\n  return [\n    adjustStat(\n      parts\n        .map((part) => (part !== undefined ? part.stats.groundSpeed : 0))\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => (part !== undefined ? part.stats.acceleration : 0))\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => (part !== undefined ? part.stats.weight : 0))\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => (part !== undefined ? part.stats.groundHandling : 0))\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => (part !== undefined ? part.stats.offRoadTraction : 0))\n        .reduce((sum, current) => sum + current)\n    ),\n  ];\n};\n\nexport const statColor = (stat: number): string => {\n  const startColor = [38, 186, 255];\n  const endColor = [249, 36, 112];\n  const diffs = startColor.map((color, index) => endColor[index] - color);\n  const color = diffs.map(\n    (diff, index) => startColor[index] + diff * (stat / 6)\n  );\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n};\n","import React from 'react';\nimport { statColor } from '../../util/Common';\nimport './ProgressBar.scss';\n\ninterface ProgressBarProps {\n  label: String;\n  value: number;\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = (props) => {\n  let separators = [];\n  for (var i = 0; i < 23; i++) {\n    separators.push(\n      <div\n        key={`separator-${i}`}\n        className=\"VerticalSeparator\"\n        style={{ height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem' }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className=\"ProgressBar\">\n      <p>\n        {props.label}:{' '}\n        <span style={{ color: statColor(props.value) }}>\n          {+props.value.toFixed(2)}\n        </span>\n      </p>\n      <div className=\"Bar\">\n        <div\n          className=\"Progress\"\n          style={{ width: `${100 - props.value * (100 / 6)}%` }}\n        ></div>\n        <div className=\"SeparatorContainer\">{separators}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { sumOfStats } from '../../util/Common';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport './KartStats.scss';\n\nexport const KartStats: React.FC = () => {\n  const context = React.useContext(PartContext);\n  const stats = sumOfStats([\n    context.selectedDriver,\n    context.selectedBody,\n    context.selectedTire,\n    context.selectedGlider,\n  ]);\n\n  return (\n    <div className=\"PartStats\">\n      <ProgressBar label=\"Speed\" value={stats[0]}></ProgressBar>\n      <ProgressBar label=\"Acceleration\" value={stats[1]}></ProgressBar>\n      <ProgressBar label=\"Weight\" value={stats[2]}></ProgressBar>\n      <ProgressBar label=\"Handling\" value={stats[3]}></ProgressBar>\n      <ProgressBar label=\"Traction\" value={stats[4]}></ProgressBar>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Kart } from '../../classes/Kart';\nimport { PartContext } from '../../providers/PartProvider';\nimport { statColor, sumOfStats } from '../../util/Common';\nimport './KartCombo.scss';\n\ninterface KartComboProps {\n  kart: Kart;\n}\n\nconst KartCombo: React.FC<KartComboProps> = (props) => {\n  const context = React.useContext(PartContext);\n\n  const stats: JSX.Element[] = [];\n  const statLabels = ['S', 'A', 'W', 'H', 'T'];\n  const statValues =\n    props.kart.driver !== undefined\n      ? sumOfStats([\n          props.kart.driver,\n          props.kart.body,\n          props.kart.tire,\n          props.kart.glider,\n        ])\n      : [];\n  statLabels.forEach((value, index) =>\n    stats.push(\n      <p key={`kart-combo-${index}`}>\n        {value}:{' '}\n        <span style={{ color: statColor(statValues[index]) }}>\n          {statValues[index]}\n        </span>\n      </p>\n    )\n  );\n\n  return (\n    <div className=\"KartCombo\" onClick={() => context.setKart(props.kart)}>\n      <div className=\"Parts\">\n        <div className=\"KartComboPart\">\n          <img src={props.kart.driver.img} alt=\"Driver\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.body.img} alt=\"Body\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.tire.img} alt=\"Tire\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.glider.img} alt=\"Glider\"></img>\n        </div>\n      </div>\n      <div className=\"Stats\">{stats}</div>\n    </div>\n  );\n};\n\nexport default KartCombo;\n","import { StatNames } from '../providers/StatPriorityProvider';\nimport { Part } from './Part';\n\nexport class TopKartsRequest {\n  constructor(\n    readonly fixedDriver: Part | null,\n    readonly fixedBody: Part | null,\n    readonly fixedTire: Part | null,\n    readonly fixedGlider: Part | null,\n    readonly priorityStats: StatNames[],\n    readonly regularStats: StatNames[],\n    readonly kartCount: number\n  ) {}\n}\n","import React from 'react';\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n} from 'react-sortable-hoc';\nimport { TopKartsRequest } from '../../classes/TopKartsRequest';\nimport { PartContext } from '../../providers/PartProvider';\nimport {\n  StatNames,\n  StatPriorityContext,\n} from '../../providers/StatPriorityProvider';\nimport './StatPriority.scss';\n\nconst StatPriority: React.FC = () => {\n  const COLOR_TOP_PRIORITY = '#f92470';\n  const COLOR_REGULAR_PRIORITY = '#777';\n  const COLOR_PRIORITY_BAR = '#26baff';\n\n  const statPriorityContext = React.useContext(StatPriorityContext);\n  const partContext = React.useContext(PartContext);\n\n  const statColor = (index: number) => {\n    if (index < statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)) {\n      return COLOR_TOP_PRIORITY;\n    } else if (\n      index > statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)\n    ) {\n      return COLOR_REGULAR_PRIORITY;\n    } else {\n      return COLOR_PRIORITY_BAR;\n    }\n  };\n\n  const SortableItem = SortableElement(({ value, currentIndex }: any) => (\n    <div className=\"Stat\" style={{ background: statColor(currentIndex) }}>\n      <p>{value}</p>\n    </div>\n  ));\n\n  const SortableList = SortableContainer(({ items }: any) => {\n    return (\n      <ul>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            currentIndex={index}\n            value={value}\n          ></SortableItem>\n        ))}\n      </ul>\n    );\n  });\n\n  const generateKarts = () => {\n    const prioritySplit = statPriorityContext.statPriority.indexOf(\n      StatNames.PRIORITY\n    );\n    const priority = statPriorityContext.statPriority.slice(0, prioritySplit);\n    const regular = statPriorityContext.statPriority.slice(prioritySplit + 1);\n    const request = new TopKartsRequest(\n      partContext.driverIsFixed ? partContext.selectedDriver : null,\n      partContext.bodyIsFixed ? partContext.selectedBody : null,\n      partContext.tireIsFixed ? partContext.selectedTire : null,\n      partContext.gliderIsFixed ? partContext.selectedGlider : null,\n      priority,\n      regular,\n      100\n    )\n    partContext.getTopKarts(request)\n  };\n\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\n    statPriorityContext.setNewStatPriority(\n      arrayMove(statPriorityContext.statPriority, oldIndex, newIndex)\n    );\n  };\n\n  return (\n    <div className=\"StatPriority\">\n      <div className=\"StatList\">\n        <SortableList\n          items={statPriorityContext.statPriority}\n          onSortEnd={onSortEnd}\n        ></SortableList>\n      </div>\n      <button onClick={generateKarts}>Generate Karts</button>\n    </div>\n  );\n};\n\nexport default StatPriority;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport KartCombo from '../KartCombo/KartCombo';\nimport './Optimizer.scss';\nimport StatPriority from '../StatPriority/StatPriority';\n\nconst Optimizer: React.FC = () => {\n  const partContext = React.useContext(PartContext);\n\n  return (\n    <div className=\"Optimizer\">\n      <StatPriority></StatPriority>\n      <div className=\"Options\">\n        {\n          partContext.topKartsLoaded\n            ? partContext.topKarts.length === 0\n              ? <p className=\"LoadingKarts\">Click \"Generate Karts\"</p>\n              : partContext.topKarts.map((kart, index) => (\n                  <KartCombo key={`kart-${index}`} kart={kart}></KartCombo>\n                ))\n            : <p className=\"LoadingKarts\">Loading Karts...</p>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default Optimizer;\n","import React, { Component } from 'react';\nimport { KartStats } from '../KartStats/KartStats';\nimport Optimizer from '../Optimizer/Optimizer';\nimport './Sidebar.scss';\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <KartStats></KartStats>\n        <Optimizer></Optimizer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport './KartOptimizerApp.scss';\nimport { KartConfig } from './components/KartConfig/KartConfig';\nimport PartProvider from './providers/PartProvider';\nimport StatPriorityProvider from './providers/StatPriorityProvider';\nimport Sidebar from './components/Sidebar/Sidebar';\n\nexport default class KartOptimizerApp extends Component {\n  render() {\n    return (\n      <StatPriorityProvider>\n        <PartProvider>\n          <div className=\"KartOptimizerApp\">\n            <Header></Header>\n            <KartConfig></KartConfig>\n            <Sidebar></Sidebar>\n          </div>\n        </PartProvider>\n      </StatPriorityProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport KartOptimizerApp from './KartOptimizerApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}