{"version":3,"sources":["classes/Stats.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","components/PartSelection/PartSelection.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["SpeedHandlingTerrain","TractionTerrain","Header","className","src","mk8","alt","Component","PartSelection","onClick","this","props","style","background","color","selectedPart","img","name","partName","isSelected","split","length","includes","pop","join","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","stats","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","setPart","part","type","console","log","PartContext","React","createContext","displayName","PartProvider","children","useState","partData","setPartData","DRIVER","data","BODY","TIRE","GLIDER","useEffect","Provider","value","PartTile","useContext","PartList","Array","partList","fill","map","_","index","KartConfig","selectedPartList","state","setState","show","isSelectedCategory","ProgressBar","separators","i","push","height","label","barWidth","toFixed","width","KartStats","handling","traction","Consumer","context","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79ca39c1.chunk.js","sourcesContent":["export enum SpeedHandlingTerrain {\n  GROUND = \"Ground\",\n  WATER = \"Water\",\n  ANTI_GRAVITY = \"Anti-Gravity\",\n  AIR = \"Air\",\n}\n\nexport enum TractionTerrain {\n  ON_ROAD = \"On-Road\",\n  OFF_ROAD = \"Off-Road\",\n}\n\nexport class Stats {\n  constructor(\n    readonly weight: number = 0,\n    readonly acceleration: number = 0,\n    readonly onRoadTraction: number = 0,\n    readonly offRoadTraction: number = 0,\n    readonly miniTurbo: number = 0,\n    readonly groundSpeed: number = 0,\n    readonly waterSpeed: number = 0,\n    readonly antiGravitySpeed: number = 0,\n    readonly airSpeed: number = 0,\n    readonly groundHandling: number = 0,\n    readonly waterHandling: number = 0,\n    readonly antiGravityHandling: number = 0,\n    readonly airHandling: number = 0\n  ) {}\n}\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from \"react\";\nimport \"./Header.scss\";\nimport mk8 from \"./MarioKart8.webp\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, MouseEventHandler } from \"react\";\nimport { Part } from \"../../classes/Part\";\nimport \"./PartSelection.scss\";\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  isSelected: boolean;\n  onClick: MouseEventHandler;\n}\n\nexport default class PartSelection extends Component<PartSelectionProps> {\n  render() {\n    return (\n      <div className=\"PartSelection\" onClick={this.props.onClick}>\n        <div className=\"SelectedPart\" style={{ background: this.color() }}>\n          <img\n            className=\"PartImage\"\n            src={this.props.selectedPart.img}\n            alt={this.props.selectedPart.name}\n          ></img>\n        </div>\n        <p className=\"PartLabel\">{this.partName()}</p>\n      </div>\n    );\n  }\n\n  color(): string {\n    return this.props.isSelected ? \"#26baff\" : \"#777\";\n  }\n\n  partName(): string {\n    let split = this.props.selectedPart.name.split(\" \");\n    if (split[split.length - 1].includes(\"(\")) split.pop();\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\n    return split.join(\" \");\n  }\n}\n","import { Stats } from \"./Stats\";\n\nexport class Part {\n  constructor(\n    readonly name: string = \"\",\n    readonly img: string = \"\",\n    readonly stats: Stats = new Stats()\n  ) {}\n}\n\nexport enum PartType {\n  DRIVER = \"Driver\",\n  BODY = \"Body\",\n  TIRE = \"Tire\",\n  GLIDER = \"Glider\",\n}\n","import React from \"react\";\nimport { Part, PartType } from \"../classes/Part\";\nimport drivers from \"../json/drivers.json\";\nimport bodies from \"../json/bodies.json\";\nimport tires from \"../json/tires.json\";\nimport gliders from \"../json/gliders.json\";\n\nexport interface PartData {\n  drivers: Part[];\n  bodies: Part[];\n  tires: Part[];\n  gliders: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n  setPart: (part: Part, type: PartType) => void;\n}\n\nexport const defaultPartData: PartData = {\n  drivers: [],\n  bodies: [],\n  tires: [],\n  gliders: [],\n  selectedDriver: new Part(),\n  selectedBody: new Part(),\n  selectedTire: new Part(),\n  selectedGlider: new Part(),\n  setPart: (part: Part, type: PartType) => console.log(part, type),\n};\n\nexport const PartContext = React.createContext<PartData>(defaultPartData);\nPartContext.displayName = \"PartData\";\n\nconst PartProvider: React.FC = (props) => {\n  const { children } = props;\n  const [partData, setPartData] = React.useState(defaultPartData);\n\n  const setPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return { ...data, selectedDriver: part };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return { ...data, selectedBody: part };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return { ...data, selectedTire: part };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return { ...data, selectedGlider: part };\n        });\n        break;\n    }\n  };\n\n  React.useEffect(() => {\n    setPartData({\n      drivers: drivers,\n      bodies: bodies,\n      tires: tires,\n      gliders: gliders,\n      selectedDriver: drivers[0],\n      selectedBody: bodies[0],\n      selectedTire: tires[0],\n      selectedGlider: gliders[0],\n      setPart: setPart,\n    });\n  }, []);\n\n  return (\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\n  );\n};\n\nexport default PartProvider;\n","import React from \"react\";\nimport { PartContext } from \"../../providers/PartProvider\";\nimport { Part, PartType } from \"../../classes/Part\";\nimport \"./PartTile.scss\";\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? \"#26baff\" : \"#555\";\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from \"react\";\nimport { Part, PartType } from \"../../classes/Part\";\nimport { PartContext } from \"../../providers/PartProvider\";\nimport PartTile from \"../PartTile/PartTile\";\nimport \"./PartList.scss\";\n\ninterface PartListProps {\n  partList: Part[];\n  type: PartType;\n}\n\nconst PartList: React.FC<PartListProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const isSelected = (part: Part) => {\n    return (\n      part === partData.selectedDriver ||\n      part === partData.selectedBody ||\n      part === partData.selectedTire ||\n      part === partData.selectedGlider\n    );\n  };\n\n  return (\n    <div className=\"PartList\">\n      {new Array(props.partList.length).fill(0).map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={props.partList[index]}\n            type={props.type}\n            isSelected={isSelected(props.partList[index])}\n          ></PartTile>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PartList;\n","import React, { useState } from \"react\";\n\nimport \"./KartConfig.scss\";\nimport PartSelection from \"../PartSelection/PartSelection\";\nimport { Part, PartType } from \"../../classes/Part\";\nimport PartList from \"../PartList/PartList\";\nimport { PartContext } from \"../../providers/PartProvider\";\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n}\n\nexport const KartConfig: React.FC = () => {\n  const partData = React.useContext(PartContext);\n  const [state, setState] = useState<KartConfigState>({\n    selectedPartList: React.useContext(PartContext).drivers,\n  });\n\n  const show = (partList: Part[]) => {\n    setState({\n      selectedPartList: partList,\n    });\n  };\n\n  const type = (partList: Part[]): PartType => {\n    if (partList.length > 0) {\n      switch (partList[0].name) {\n        case \"Standard Kart\":\n          return PartType.BODY;\n        case \"Standard\":\n          return PartType.TIRE;\n        case \"Super Glider\":\n          return PartType.GLIDER;\n        default:\n          return PartType.DRIVER;\n      }\n    }\n    return PartType.DRIVER;\n  };\n\n  const partList = (): Part[] => {\n    return state.selectedPartList.length === 0\n      ? partData.drivers\n      : state.selectedPartList;\n  };\n\n  const isSelectedCategory = (partList: Part[]): boolean => {\n    return type(partList) === type(state.selectedPartList);\n  };\n\n  return (\n    <div className=\"KartConfig\">\n      <div className=\"CenterContainer\">\n        <div className=\"PartOptions\">\n          <PartSelection\n            selectedPart={partData.selectedDriver}\n            isSelected={isSelectedCategory(partData.drivers)}\n            onClick={() => show(partData.drivers)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedBody}\n            isSelected={isSelectedCategory(partData.bodies)}\n            onClick={() => show(partData.bodies)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedTire}\n            isSelected={isSelectedCategory(partData.tires)}\n            onClick={() => show(partData.tires)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedGlider}\n            isSelected={isSelectedCategory(partData.gliders)}\n            onClick={() => show(partData.gliders)}\n          ></PartSelection>\n        </div>\n        <div className=\"Separator\"></div>\n        <PartList partList={partList()} type={type(partList())}></PartList>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport \"./ProgressBar.scss\";\n\ninterface ProgressBarProps {\n  label: String;\n  value: number;\n}\n\nexport default class ProgressBar extends Component<ProgressBarProps> {\n  render() {\n    let separators = [];\n    for (var i = 0; i < 23; i++) {\n      separators.push(\n        <div\n          key={i}\n          className=\"VerticalSeparator\"\n          style={{ height: (i + 1) % 4 === 0 ? \"1rem\" : \"0.5rem\" }}\n        ></div>\n      );\n    }\n    return (\n      <div className=\"ProgressBar\">\n        <p>\n          {this.props.label}: {+(this.barWidth() / (100 / 6)).toFixed(2)}\n        </p>\n        <div className=\"Bar\">\n          <div\n            className=\"Progress\"\n            style={{ width: `${this.barWidth()}%` }}\n          ></div>\n          <div className=\"SeparatorContainer\">{separators}</div>\n        </div>\n      </div>\n    );\n  }\n\n  barWidth(): number {\n    return 100 - (this.props.value * (100 / 24) + 12.5);\n  }\n}\n","import React from \"react\";\nimport { PartContext, PartData } from \"../../providers/PartProvider\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\nimport \"./KartStats.scss\";\n\nexport const KartStats: React.FC = () => {\n  const speed = (data: PartData): number => {\n    return (\n      data.selectedDriver.stats.groundSpeed +\n      data.selectedBody.stats.groundSpeed +\n      data.selectedTire.stats.groundSpeed +\n      data.selectedGlider.stats.groundSpeed\n    );\n  };\n\n  const acceleration = (data: PartData): number => {\n    return (\n      data.selectedDriver.stats.acceleration +\n      data.selectedBody.stats.acceleration +\n      data.selectedTire.stats.acceleration +\n      data.selectedGlider.stats.acceleration\n    );\n  };\n\n  const weight = (data: PartData): number => {\n    return (\n      data.selectedDriver.stats.weight +\n      data.selectedBody.stats.weight +\n      data.selectedTire.stats.weight +\n      data.selectedGlider.stats.weight\n    );\n  };\n\n  const handling = (data: PartData): number => {\n    return (\n      data.selectedDriver.stats.groundHandling +\n      data.selectedBody.stats.groundHandling +\n      data.selectedTire.stats.groundHandling +\n      data.selectedGlider.stats.groundHandling\n    );\n  };\n\n  const traction = (data: PartData): number => {\n    return (\n      data.selectedDriver.stats.offRoadTraction +\n      data.selectedBody.stats.offRoadTraction +\n      data.selectedTire.stats.offRoadTraction +\n      data.selectedGlider.stats.offRoadTraction\n    );\n  };\n\n  return (\n    <PartContext.Consumer>\n      {(context) => (\n        <div className=\"PartStats\">\n          <div className=\"StatsContainer\">\n            <ProgressBar label=\"Speed\" value={speed(context)}></ProgressBar>\n            <ProgressBar\n              label=\"Acceleration\"\n              value={acceleration(context)}\n            ></ProgressBar>\n            <ProgressBar label=\"Weight\" value={weight(context)}></ProgressBar>\n            <ProgressBar\n              label=\"Handling\"\n              value={handling(context)}\n            ></ProgressBar>\n            <ProgressBar\n              label=\"Traction\"\n              value={traction(context)}\n            ></ProgressBar>\n          </div>\n        </div>\n      )}\n    </PartContext.Consumer>\n  );\n};\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport \"./KartOptimizerApp.scss\";\nimport { KartConfig } from \"./components/KartConfig/KartConfig\";\nimport { KartStats } from \"./components/KartStats/KartStats\";\nimport PartProvider from \"./providers/PartProvider\";\n\nexport default class KartOptimizerApp extends Component {\n  render() {\n    return (\n      <PartProvider>\n        <div className=\"KartOptimizerApp\">\n          <Header></Header>\n          <KartConfig></KartConfig>\n          <KartStats></KartStats>\n          {/* <Optimizer></Optimizer> */}\n        </div>\n      </PartProvider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport KartOptimizerApp from \"./KartOptimizerApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}