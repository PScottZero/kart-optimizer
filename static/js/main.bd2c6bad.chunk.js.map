{"version":3,"sources":["components/PartTile/Part.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/PartSelection/PartSelection.tsx","components/KartConfig/KartConfig.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","views/main/KartOptimizerApp.tsx","index.tsx"],"names":["PartType","Header","className","src","mk8","alt","Component","PartTile","onClick","this","props","part","img","PartList","parts","Array","partList","length","fill","map","_","index","callbackFunc","type","PartSelection","selectedPart","name","partName","split","includes","pop","join","KartConfig","selectPart","DRIVER","setState","selectedDriver","BODY","selectedBody","TIRE","selectedTire","GLIDER","selectedGlider","state","selectedPartList","drivers","bodies","tires","gliders","show","ProgressBar","separators","i","push","style","height","label","barWidth","toFixed","width","value","KartStats","speed","acceleration","weight","handling","traction","stats","groundSpeed","groundHandling","offRoadTraction","KartOptimizerApp","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd2c6bad.chunk.js","sourcesContent":["import { Stats } from \"../KartConfig/Stats\";\r\n\r\nexport class Part {\r\n  constructor(\r\n    readonly name: string,\r\n    readonly img: string,\r\n    readonly stats: Stats\r\n  ) {}\r\n}\r\n\r\nexport enum PartType {\r\n  DRIVER = \"Driver\",\r\n  BODY = \"Body\",\r\n  TIRE = \"Tire\",\r\n  GLIDER = \"Glider\",\r\n}\r\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from \"react\";\r\nimport \"./Header.scss\";\r\nimport mk8 from \"./MarioKart8.webp\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Header\">\r\n        <div className=\"Logo\">\r\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\r\n          <p className=\"LogoText\">Kart Optimizer</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, MouseEventHandler } from \"react\";\r\nimport { Part } from \"./Part\";\r\nimport \"./PartTile.scss\";\r\n\r\nexport default class PartTile extends Component<{\r\n  part: Part;\r\n  onClick: MouseEventHandler;\r\n}> {\r\n  render() {\r\n    return (\r\n      <div className=\"PartTile\" onClick={this.props.onClick}>\r\n        <img className=\"PartImage\" src={this.props.part.img} alt=\"Part\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Part, PartType } from \"../PartTile/Part\";\r\nimport PartTile from \"../PartTile/PartTile\";\r\nimport \"./PartList.scss\";\r\n\r\nexport default class PartList extends Component<{\r\n  partList: Part[];\r\n  type: PartType;\r\n  callbackFunc: Function;\r\n}> {\r\n  render() {\r\n    var parts = new Array(this.props.partList.length)\r\n      .fill(0)\r\n      .map((_, index) => {\r\n        return (\r\n          <PartTile\r\n            key={index}\r\n            part={this.props.partList[index]}\r\n            onClick={() =>\r\n              this.props.callbackFunc(\r\n                this.props.partList[index],\r\n                this.props.type\r\n              )\r\n            }\r\n          ></PartTile>\r\n        );\r\n      });\r\n    return <div className=\"PartList\">{parts}</div>;\r\n  }\r\n}\r\n","import React, { Component, MouseEventHandler } from \"react\";\r\nimport { Part } from \"../PartTile/Part\";\r\nimport \"./PartSelection.scss\";\r\n\r\ninterface PartSelectionProps {\r\n  selectedPart: Part;\r\n  onClick: MouseEventHandler;\r\n}\r\n\r\nexport default class PartSelection extends Component<PartSelectionProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"PartSelection\" onClick={this.props.onClick}>\r\n        <div className=\"SelectedPart\">\r\n          <img className=\"PartImage\"\r\n            src={this.props.selectedPart.img}\r\n            alt={this.props.selectedPart.name}\r\n          ></img>\r\n        </div>\r\n        <p className=\"PartLabel\">{this.partName()}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  partName() {\r\n    let split = this.props.selectedPart.name.split(' ')\r\n    if (split[split.length - 1].includes('(')) split.pop()\r\n    if (split.length >= 2) return `${split[0]} ${split[1]}`\r\n    return split.join(' ')\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport drivers from \"../../json/drivers.json\";\r\nimport bodies from \"../../json/bodies.json\";\r\nimport tires from \"../../json/tires.json\";\r\nimport gliders from \"../../json/gliders.json\";\r\nimport \"./KartConfig.scss\";\r\nimport PartList from \"../PartList/PartList\";\r\nimport PartSelection from \"../PartSelection/PartSelection\";\r\nimport { Part, PartType } from \"../PartTile/Part\";\r\n\r\ninterface KartConfigProps {\r\n  callbackFunc: Function\r\n}\r\n\r\ninterface KartConfigState {\r\n  selectedPartList: Part[];\r\n  selectedDriver: Part;\r\n  selectedBody: Part;\r\n  selectedTire: Part;\r\n  selectedGlider: Part;\r\n}\r\n\r\nexport default class KartConfig extends Component<KartConfigProps, KartConfigState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      selectedPartList: drivers,\r\n      selectedDriver: drivers[0],\r\n      selectedBody: bodies[0],\r\n      selectedTire: tires[0],\r\n      selectedGlider: gliders[0],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"KartConfig\">\r\n        <div className=\"CenterContainer\">\r\n          <div className=\"PartOptions\">\r\n            <PartSelection\r\n              selectedPart={this.state.selectedDriver}\r\n              onClick={() => this.show(drivers)}\r\n            ></PartSelection>\r\n            <PartSelection\r\n              selectedPart={this.state.selectedBody}\r\n              onClick={() => this.show(bodies)}\r\n            ></PartSelection>\r\n            <PartSelection\r\n              selectedPart={this.state.selectedTire}\r\n              onClick={() => this.show(tires)}\r\n            ></PartSelection>\r\n            <PartSelection\r\n              selectedPart={this.state.selectedGlider}\r\n              onClick={() => this.show(gliders)}\r\n            ></PartSelection>\r\n          </div>\r\n          <div className=\"Separator\"></div>\r\n          <PartList\r\n            partList={this.state.selectedPartList}\r\n            type={this.type()}\r\n            callbackFunc={this.selectPart}\r\n          ></PartList>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  show(partList: Part[]) {\r\n    this.setState({\r\n      selectedPartList: partList,\r\n    });\r\n  }\r\n\r\n  type(): PartType {\r\n    switch (this.state.selectedPartList) {\r\n      case drivers:\r\n        return PartType.DRIVER;\r\n      case bodies:\r\n        return PartType.BODY;\r\n      case tires:\r\n        return PartType.TIRE;\r\n      case gliders:\r\n        return PartType.GLIDER;\r\n      default:\r\n        return PartType.DRIVER;\r\n    }\r\n  }\r\n\r\n  selectPart = (part: Part, type: PartType) => {\r\n    switch (type) {\r\n      case PartType.DRIVER: this.setState({ selectedDriver: part }); break;\r\n      case PartType.BODY: this.setState({ selectedBody: part }); break;\r\n      case PartType.TIRE: this.setState({ selectedTire: part }); break;\r\n      case PartType.GLIDER: this.setState({ selectedGlider: part }); break;\r\n    }\r\n    this.props.callbackFunc(part, type)\r\n  };\r\n}\r\n","import React, { Component } from 'react'\r\nimport './ProgressBar.scss'\r\n\r\ninterface ProgressBarProps {\r\n  label: String,\r\n  value: number,\r\n}\r\n\r\nexport default class ProgressBar extends Component<ProgressBarProps> {\r\n  render() {\r\n    let separators = []\r\n    for (var i = 0; i < 23; i++) {\r\n      separators.push(<div key={i} className=\"VerticalSeparator\" style={{height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem'}}></div>)\r\n    }\r\n    return (\r\n      <div className=\"ProgressBar\">\r\n        <p>{this.props.label}: {+(this.barWidth() / (100 / 6)).toFixed(2)}</p>\r\n        <div className=\"Bar\">\r\n          <div className=\"Progress\" style={{width: `${this.barWidth()}%`}}></div>\r\n          <div className=\"SeparatorContainer\">{separators}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  barWidth(): number {\r\n    return this.props.value * (100 / 24) + 12.5\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Part } from '../PartTile/Part'\r\nimport ProgressBar from '../ProgressBar/ProgressBar'\r\nimport './KartStats.scss'\r\n\r\ninterface KartStatsProps {\r\n  selectedDriver: Part,\r\n  selectedBody: Part,\r\n  selectedTire: Part,\r\n  selectedGlider: Part,\r\n}\r\n\r\nexport default class KartStats extends Component<KartStatsProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"PartStats\">\r\n        <div className=\"StatsContainer\">\r\n          <ProgressBar label=\"Speed\" value={this.speed()}></ProgressBar>\r\n          <ProgressBar label=\"Acceleration\" value={this.acceleration()}></ProgressBar>\r\n          <ProgressBar label=\"Weight\" value={this.weight()}></ProgressBar>\r\n          <ProgressBar label=\"Handling\" value={this.handling()}></ProgressBar>\r\n          <ProgressBar label=\"Traction\" value={this.traction()}></ProgressBar>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  speed(): number {\r\n    return this.props.selectedDriver.stats.groundSpeed +\r\n      this.props.selectedBody.stats.groundSpeed +\r\n      this.props.selectedTire.stats.groundSpeed +\r\n      this.props.selectedGlider.stats.groundSpeed\r\n  }\r\n\r\n  acceleration(): number {\r\n    return this.props.selectedDriver.stats.acceleration +\r\n      this.props.selectedBody.stats.acceleration +\r\n      this.props.selectedTire.stats.acceleration +\r\n      this.props.selectedGlider.stats.acceleration\r\n  }\r\n\r\n  weight(): number {\r\n    return this.props.selectedDriver.stats.weight +\r\n      this.props.selectedBody.stats.weight +\r\n      this.props.selectedTire.stats.weight +\r\n      this.props.selectedGlider.stats.weight\r\n  }\r\n\r\n  handling(): number {\r\n    return this.props.selectedDriver.stats.groundHandling +\r\n      this.props.selectedBody.stats.groundHandling +\r\n      this.props.selectedTire.stats.groundHandling +\r\n      this.props.selectedGlider.stats.groundHandling\r\n  }\r\n\r\n  traction(): number {\r\n    return this.props.selectedDriver.stats.offRoadTraction +\r\n      this.props.selectedBody.stats.offRoadTraction +\r\n      this.props.selectedTire.stats.offRoadTraction +\r\n      this.props.selectedGlider.stats.offRoadTraction\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from '../../components/Header/Header'\r\nimport KartConfig from '../../components/KartConfig/KartConfig'\r\nimport KartStats from '../../components/KartStats/KartStats'\r\nimport { Part, PartType } from '../../components/PartTile/Part'\r\nimport './KartOptimizerApp.scss'\r\nimport drivers from \"../../json/drivers.json\";\r\nimport bodies from \"../../json/bodies.json\";\r\nimport tires from \"../../json/tires.json\";\r\nimport gliders from \"../../json/gliders.json\";\r\n\r\ninterface KartOptimizerAppState {\r\n  selectedDriver: Part,\r\n  selectedBody: Part,\r\n  selectedTire: Part,\r\n  selectedGlider: Part\r\n}\r\n\r\nexport default class KartOptimizerApp extends Component<{}, KartOptimizerAppState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      selectedDriver: drivers[0],\r\n      selectedBody: bodies[0],\r\n      selectedTire: tires[0],\r\n      selectedGlider: gliders[0],\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    console.log(this.state)\r\n    return (\r\n      <div className=\"KartOptimizerApp\">\r\n        <Header></Header>\r\n        <KartConfig callbackFunc={this.selectPart}></KartConfig>\r\n        <KartStats\r\n          selectedDriver={this.state.selectedDriver}\r\n          selectedBody={this.state.selectedBody}\r\n          selectedTire={this.state.selectedTire}\r\n          selectedGlider={this.state.selectedGlider}\r\n        ></KartStats>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  selectPart = (part: Part, type: PartType) => {\r\n    switch (type) {\r\n      case PartType.DRIVER: this.setState({selectedDriver: part}); break;\r\n      case PartType.BODY: this.setState({selectedBody: part}); break;\r\n      case PartType.TIRE: this.setState({selectedTire: part}); break;\r\n      case PartType.GLIDER: this.setState({selectedGlider: part}); break;\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport KartOptimizerApp from \"./views/main/KartOptimizerApp\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <KartOptimizerApp></KartOptimizerApp>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}