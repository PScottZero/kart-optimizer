{"version":3,"sources":["providers/StatPriorityProvider.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","classes/Stats.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartSelection/PartSelection.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","util/Common.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","components/KartCombo/KartCombo.tsx","classes/TopKartsRequest.tsx","components/StatPriority/StatPriority.tsx","components/Optimizer/Optimizer.tsx","components/Sidebar/Sidebar.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["StatNames","Header","className","src","mk8","alt","Component","SpeedHandlingTerrain","TractionTerrain","defaultStatPriorityData","statPriority","SPEED","ACCELERATION","PRIORITY","WEIGHT","HANDLING","TRACTION","setNewStatPriority","console","log","StatPriorityContext","React","createContext","StatPriorityProvider","props","children","useState","setStatPriority","data","useEffect","Provider","value","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","name","img","stats","stat","this","map","getStat","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","driverIsFixed","bodyIsFixed","tireIsFixed","gliderIsFixed","topKarts","topKartsLoaded","setPart","part","type","setKart","kart","setTopKarts","toggleFixed","PartContext","PartProvider","partData","setPartData","DRIVER","BODY","TIRE","GLIDER","driver","body","tire","glider","getPartList","endpoint","a","fetch","method","response","ok","text","then","jsonString","JSON","parse","PartSelection","partContext","useContext","isFixed","selectedPartType","style","background","isSelected","undefined","selectedPart","onClick","split","length","includes","pop","join","partName","PartTile","PartList","Array","partList","fill","_","index","KartConfig","selectedPartList","state","setState","show","partListType","isSelectedCategory","href","sumOfStats","parts","adjustStat","reduce","sum","current","statColor","startColor","endColor","color","diff","ProgressBar","separators","i","push","height","label","toFixed","width","KartStats","context","KartCombo","statValues","forEach","TopKartsRequest","fixedDriver","fixedBody","fixedTire","fixedGlider","priorityStats","regularStats","kartCount","StatPriority","statPriorityContext","SortableItem","SortableElement","currentIndex","indexOf","SortableList","SortableContainer","items","generateKarts","prioritySplit","priority","slice","regular","headers","stringify","onSortEnd","oldIndex","newIndex","arrayMove","Optimizer","Sidebar","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68e4aac3.chunk.js","sourcesContent":["import React from 'react';\n\ninterface StatPriorityData {\n  statPriority: StatNames[];\n  setNewStatPriority: (statPriority: StatNames[]) => void;\n}\n\nexport enum StatNames {\n  SPEED = 'Speed',\n  ACCELERATION = 'Acceleration',\n  WEIGHT = 'Weight',\n  HANDLING = 'Handling',\n  TRACTION = 'Traction',\n  PRIORITY = '',\n}\n\nconst defaultStatPriorityData = {\n  statPriority: [\n    StatNames.SPEED,\n    StatNames.ACCELERATION,\n    StatNames.PRIORITY,\n    StatNames.WEIGHT,\n    StatNames.HANDLING,\n    StatNames.TRACTION,\n  ],\n  setNewStatPriority: (statPriority: StatNames[]) => console.log(statPriority),\n};\n\nexport const StatPriorityContext = React.createContext<StatPriorityData>(\n  defaultStatPriorityData\n);\n\nconst StatPriorityProvider: React.FC = (props) => {\n  const { children } = props;\n  const [statPriority, setStatPriority] = React.useState(\n    defaultStatPriorityData\n  );\n\n  const setNewStatPriority = (statPriority: StatNames[]) => {\n    setStatPriority((data) => {\n      return { ...data, statPriority: statPriority };\n    });\n  };\n\n  React.useEffect(() => {\n    setStatPriority((data) => {\n      return { ...data, setNewStatPriority: setNewStatPriority };\n    });\n  }, []);\n\n  return (\n    <StatPriorityContext.Provider value={statPriority}>\n      {children}\n    </StatPriorityContext.Provider>\n  );\n};\n\nexport default StatPriorityProvider;\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport mk8 from './MarioKart8.webp';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SpeedHandlingTerrain {\n  GROUND = 'Ground',\n  WATER = 'Water',\n  ANTI_GRAVITY = 'Anti-Gravity',\n  AIR = 'Air',\n}\n\nexport enum TractionTerrain {\n  ON_ROAD = 'On-Road',\n  OFF_ROAD = 'Off-Road',\n}\n\nexport class Stats {\n  constructor(\n    readonly weight: number = 0,\n    readonly acceleration: number = 0,\n    readonly onRoadTraction: number = 0,\n    readonly offRoadTraction: number = 0,\n    readonly miniTurbo: number = 0,\n    readonly groundSpeed: number = 0,\n    readonly waterSpeed: number = 0,\n    readonly antiGravitySpeed: number = 0,\n    readonly airSpeed: number = 0,\n    readonly groundHandling: number = 0,\n    readonly waterHandling: number = 0,\n    readonly antiGravityHandling: number = 0,\n    readonly airHandling: number = 0\n  ) {}\n}\n\nexport const ReducedStats = (\n  speed: number,\n  acceleration: number,\n  weight: number,\n  handling: number,\n  traction: number\n) => {\n  return new Stats(\n    weight,\n    acceleration,\n    0,\n    traction,\n    0,\n    speed,\n    0,\n    0,\n    0,\n    handling,\n    0,\n    0,\n    0\n  );\n};\n","import { StatNames } from '../providers/StatPriorityProvider';\nimport { Stats } from './Stats';\n\nexport class Part {\n  constructor(\n    readonly name: string = '',\n    readonly img: string = '',\n    readonly stats: Stats = new Stats()\n  ) {}\n\n  getStat(stat: StatNames): number {\n    switch (stat) {\n      case StatNames.SPEED:\n        return this.stats.groundSpeed;\n      case StatNames.ACCELERATION:\n        return this.stats.acceleration;\n      case StatNames.WEIGHT:\n        return this.stats.weight;\n      case StatNames.HANDLING:\n        return this.stats.groundHandling;\n      case StatNames.TRACTION:\n        return this.stats.offRoadTraction;\n      default:\n        return 0;\n    }\n  }\n\n  getStats(stats: StatNames[]): number[] {\n    return stats.map((stat) => this.getStat(stat));\n  }\n}\n\nexport enum PartType {\n  DRIVER = 'Driver',\n  BODY = 'Body',\n  TIRE = 'Tire',\n  GLIDER = 'Glider',\n}\n","import React from 'react';\nimport { Part, PartType } from '../classes/Part';\nimport { Kart } from '../classes/Kart';\n\nexport interface PartData {\n  drivers: Part[];\n  bodies: Part[];\n  tires: Part[];\n  gliders: Part[];\n  selectedDriver: Part;\n  selectedBody: Part;\n  selectedTire: Part;\n  selectedGlider: Part;\n  driverIsFixed: boolean;\n  bodyIsFixed: boolean;\n  tireIsFixed: boolean;\n  gliderIsFixed: boolean;\n  topKarts: Kart[];\n  topKartsLoaded: boolean;\n  setPart: (part: Part, type: PartType) => void;\n  setKart: (kart: Kart) => void;\n  setTopKarts: (topKarts: Kart[]) => void;\n  toggleFixed: (type: PartType) => void;\n}\n\nexport const defaultPartData: PartData = {\n  drivers: [],\n  bodies: [],\n  tires: [],\n  gliders: [],\n  selectedDriver: new Part(),\n  selectedBody: new Part(),\n  selectedTire: new Part(),\n  selectedGlider: new Part(),\n  driverIsFixed: false,\n  bodyIsFixed: false,\n  tireIsFixed: false,\n  gliderIsFixed: false,\n  topKarts: [],\n  topKartsLoaded: true,\n  setPart: (part: Part, type: PartType) => console.log(part, type),\n  setKart: (kart: Kart) => console.log(kart),\n  setTopKarts: (topKarts: Kart[]) => console.log(topKarts),\n  toggleFixed: (type: PartType) => console.log(type),\n};\n\nexport const PartContext = React.createContext<PartData>(defaultPartData);\n\nconst PartProvider: React.FC = (props) => {\n  const { children } = props;\n  const [partData, setPartData] = React.useState(defaultPartData);\n\n  const setPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return { ...data, selectedDriver: part };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return { ...data, selectedBody: part };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return { ...data, selectedTire: part };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return { ...data, selectedGlider: part };\n        });\n        break;\n    }\n  };\n\n  const setKart = (kart: Kart) => {\n    setPartData((data) => {\n      return {\n        ...data,\n        selectedDriver: kart.driver,\n        selectedBody: kart.body,\n        selectedTire: kart.tire,\n        selectedGlider: kart.glider,\n      };\n    });\n  };\n\n  const setTopKarts = (topKarts: Kart[]) => {\n    setPartData((data) => {\n      return {\n        ...data,\n        topKarts: topKarts\n      }\n    })\n  }\n\n  const toggleFixed = (type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        setPartData((data) => {\n          return {\n            ...data,\n            driverIsFixed: !data.driverIsFixed,\n          };\n        });\n        break;\n      case PartType.BODY:\n        setPartData((data) => {\n          return {\n            ...data,\n            bodyIsFixed: !data.bodyIsFixed,\n          };\n        });\n        break;\n      case PartType.TIRE:\n        setPartData((data) => {\n          return {\n            ...data,\n            tireIsFixed: !data.tireIsFixed,\n          };\n        });\n        break;\n      case PartType.GLIDER:\n        setPartData((data) => {\n          return {\n            ...data,\n            gliderIsFixed: !data.gliderIsFixed,\n          };\n        });\n        break;\n    }\n  }\n\n  const getPartList = async (endpoint: string): Promise<Part[]> => {\n    try {\n      const response = await fetch(endpoint, { method: 'GET' });\n      if (response.ok) {\n        return response.text().then(jsonString => JSON.parse(jsonString) as Part[])\n      } else {\n        return []\n      }\n    } catch (error) {\n      return []\n    }\n  }\n\n  React.useEffect(() => {\n    setPartData({\n      drivers: [],\n      bodies: [],\n      tires: [],\n      gliders: [],\n      selectedDriver: new Part(),\n      selectedBody: new Part(),\n      selectedTire: new Part(),\n      selectedGlider: new Part(),\n      driverIsFixed: false,\n      bodyIsFixed: false,\n      tireIsFixed: false,\n      gliderIsFixed: false,\n      topKarts: [],\n      topKartsLoaded: true,\n      setPart: setPart,\n      setKart: setKart,\n      setTopKarts: setTopKarts,\n      toggleFixed: toggleFixed\n    });\n    getPartList('/drivers').then(drivers =>\n      setPartData(data => {\n        return {\n          ...data,\n          drivers: drivers,\n          selectedDriver: drivers[0]\n        }\n      })\n    );\n    getPartList('/bodies').then(bodies => {\n      setPartData(data => {\n        return {\n          ...data,\n          bodies: bodies,\n          selectedBody: bodies[0]\n        }\n      })\n    })\n    getPartList('/tires').then(tires => {\n      setPartData(data => {\n        return {\n          ...data,\n          tires: tires,\n          selectedTire: tires[0],\n        }\n      })\n    })\n    getPartList('/gliders').then(gliders => {\n      setPartData(data => {\n        return {\n          ...data,\n          gliders: gliders,\n          selectedGlider: gliders[0]\n        }\n      })\n    })\n  }, []);\n\n  return (\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\n  );\n};\n\nexport default PartProvider;\n","import React, { MouseEventHandler } from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport './PartSelection.scss';\n\ninterface PartSelectionProps {\n  selectedPart: Part;\n  selectedPartType: PartType;\n  isSelected: boolean;\n  isFixed: boolean;\n  onClick: MouseEventHandler;\n}\n\nconst PartSelection: React.FC<PartSelectionProps> = (props) => {\n  const partContext = React.useContext(PartContext);\n\n  const backgroundColor = (): string => {\n    return props.isSelected && props.selectedPart !== undefined ? '#26baff' : '#777';\n  };\n\n  const lockButtonColor = (): string => {\n    return isFixed() ? '#f92470' : '#26baff';\n  };\n\n  const partName = (): string => {\n    let split = props.selectedPart.name.split(' ');\n    if (split[split.length - 1].includes('(')) split.pop();\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\n    return split.join(' ');\n  };\n\n  const isFixed = () => {\n    switch (props.selectedPartType) {\n      case PartType.DRIVER:\n        return partContext.driverIsFixed;\n      case PartType.BODY:\n        return partContext.bodyIsFixed;\n      case PartType.TIRE:\n        return partContext.tireIsFixed;\n      case PartType.GLIDER:\n        return partContext.gliderIsFixed;\n    }\n  };\n\n  const toggleFixed = (type: PartType) => partContext.toggleFixed(type);\n\n  return (\n    <div className=\"PartSelection\">\n      <div\n        className=\"SelectedPart\"\n        style={{ background: backgroundColor() }}\n        onClick={props.onClick}\n      >\n        <img\n          className=\"PartImage\"\n          src={props.selectedPart !== undefined ? props.selectedPart.img : ''}\n          alt={props.selectedPart !== undefined ? props.selectedPart.name : ''}\n        ></img>\n      </div>\n      <div\n        className=\"PartLock\"\n        style={{ background: lockButtonColor() }}\n        onClick={() => props.selectedPart !== undefined ? toggleFixed(props.selectedPartType) : {}}\n      >\n        <p className=\"PartLabel\">{props.selectedPart !== undefined ? partName() : 'None'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default PartSelection;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { Part, PartType } from '../../classes/Part';\nimport './PartTile.scss';\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected?: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#555';\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from 'react';\nimport { Part, PartType } from '../../classes/Part';\nimport { PartContext } from '../../providers/PartProvider';\nimport PartTile from '../PartTile/PartTile';\nimport './PartList.scss';\n\ninterface PartListProps {\n  partList: Part[];\n  type: PartType;\n}\n\nconst PartList: React.FC<PartListProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const isSelected = (part: Part) => {\n    return (\n      part.name === partData.selectedDriver.name ||\n      part.name === partData.selectedBody.name ||\n      part.name === partData.selectedTire.name ||\n      part.name === partData.selectedGlider.name\n    );\n  };\n\n  return (\n    <div className=\"PartList\">\n      {new Array(props.partList.length).fill(0).map((_, index) => {\n        return (\n          <PartTile\n            key={index}\n            part={props.partList[index]}\n            type={props.type}\n            isSelected={isSelected(props.partList[index])}\n          ></PartTile>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default PartList;\n","import React, { useState } from 'react';\n\nimport './KartConfig.scss';\nimport PartSelection from '../PartSelection/PartSelection';\nimport { Part, PartType } from '../../classes/Part';\nimport PartList from '../PartList/PartList';\nimport { PartContext } from '../../providers/PartProvider';\n\ninterface KartConfigState {\n  selectedPartList: Part[];\n}\n\nexport const KartConfig: React.FC = () => {\n  const partData = React.useContext(PartContext);\n  const [state, setState] = useState<KartConfigState>({\n    selectedPartList: React.useContext(PartContext).drivers,\n  });\n\n  const show = (partList: Part[]) => {\n    setState({\n      selectedPartList: partList,\n    });\n  };\n\n  const partListType = (partList: Part[]): PartType => {\n    if (partList.length > 0) {\n      switch (partList[0].name) {\n        case 'Standard Kart':\n          return PartType.BODY;\n        case 'Standard':\n          return PartType.TIRE;\n        case 'Super Glider':\n          return PartType.GLIDER;\n        default:\n          return PartType.DRIVER;\n      }\n    }\n    return PartType.DRIVER;\n  };\n\n  const partList = (): Part[] => {\n    return state.selectedPartList.length === 0\n      ? partData.drivers\n      : state.selectedPartList;\n  };\n\n  const isSelectedCategory = (partList: Part[]): boolean => {\n    return partListType(partList) === partListType(state.selectedPartList);\n  };\n\n  return (\n    <div className=\"KartConfig\">\n      <div className=\"CenterContainer\">\n        <div className=\"PartOptions\">\n          <PartSelection\n            selectedPart={partData.selectedDriver}\n            selectedPartType={partListType(partData.drivers)}\n            isSelected={isSelectedCategory(partData.drivers)}\n            isFixed={partData.driverIsFixed}\n            onClick={() => show(partData.drivers)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedBody}\n            selectedPartType={partListType(partData.bodies)}\n            isSelected={isSelectedCategory(partData.bodies)}\n            isFixed={partData.bodyIsFixed}\n            onClick={() => show(partData.bodies)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedTire}\n            selectedPartType={partListType(partData.tires)}\n            isSelected={isSelectedCategory(partData.tires)}\n            isFixed={partData.tireIsFixed}\n            onClick={() => show(partData.tires)}\n          ></PartSelection>\n          <PartSelection\n            selectedPart={partData.selectedGlider}\n            selectedPartType={partListType(partData.gliders)}\n            isSelected={isSelectedCategory(partData.gliders)}\n            isFixed={partData.gliderIsFixed}\n            onClick={() => show(partData.gliders)}\n          ></PartSelection>\n        </div>\n        <div className=\"Separator\"></div>\n        {\n          partList().length !== 0\n            ? <PartList\n                partList={partList()}\n                type={partListType(partList())}\n              ></PartList>\n            : <p className=\"NoBackend\">\n                Backend is not running.<br/>\n                Please download the <a href=\"https://drive.google.com/file/d/1B-_u6OXax6jnumH9PEm9Pit_3ZycWg5m/view?usp=sharing\">backend</a><br/>\n                then open a terminal in the same location as the downloaded .jar file\n                and run the command: <span>java -jar ./kart-optimizer-backend.jar</span>\n              </p>\n        }\n      </div>\n    </div>\n  );\n};\n","import { Part } from '../classes/Part';\n\nexport const sumOfStats = (parts: Part[]): number[] => {\n  const adjustStat = (stat: number): number => stat / 4 + 0.75;\n  return [\n    adjustStat(\n      parts\n        .map((part) => part !== undefined ? part.stats.groundSpeed : 0)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part !== undefined ? part.stats.acceleration : 0)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part !== undefined ? part.stats.weight : 0)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part !== undefined ? part.stats.groundHandling : 0)\n        .reduce((sum, current) => sum + current)\n    ),\n    adjustStat(\n      parts\n        .map((part) => part !== undefined ? part.stats.offRoadTraction : 0)\n        .reduce((sum, current) => sum + current)\n    ),\n  ];\n};\n\nexport const statColor = (stat: number): string => {\n  const startColor = [38, 186, 255];\n  const endColor = [249, 36, 112];\n  const diffs = startColor.map((color, index) => endColor[index] - color);\n  const color = diffs.map(\n    (diff, index) => startColor[index] + diff * (stat / 6)\n  );\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\n};\n","import React from 'react';\nimport { statColor } from '../../util/Common';\nimport './ProgressBar.scss';\n\ninterface ProgressBarProps {\n  label: String;\n  value: number;\n}\n\nconst ProgressBar: React.FC<ProgressBarProps> = (props) => {\n  let separators = [];\n  for (var i = 0; i < 23; i++) {\n    separators.push(\n      <div\n        key={`separator-${i}`}\n        className=\"VerticalSeparator\"\n        style={{ height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem' }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className=\"ProgressBar\">\n      <p>\n        {props.label}:{' '}\n        <span style={{ color: statColor(props.value) }}>\n          {+props.value.toFixed(2)}\n        </span>\n      </p>\n      <div className=\"Bar\">\n        <div\n          className=\"Progress\"\n          style={{ width: `${100 - props.value * (100 / 6)}%` }}\n        ></div>\n        <div className=\"SeparatorContainer\">{separators}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { sumOfStats } from '../../util/Common';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport './KartStats.scss';\n\nexport const KartStats: React.FC = () => {\n  const context = React.useContext(PartContext);\n  const stats = sumOfStats([\n    context.selectedDriver,\n    context.selectedBody,\n    context.selectedTire,\n    context.selectedGlider,\n  ]);\n\n  return (\n    <div className=\"PartStats\">\n      <ProgressBar label=\"Speed\" value={stats[0]}></ProgressBar>\n      <ProgressBar label=\"Acceleration\" value={stats[1]}></ProgressBar>\n      <ProgressBar label=\"Weight\" value={stats[2]}></ProgressBar>\n      <ProgressBar label=\"Handling\" value={stats[3]}></ProgressBar>\n      <ProgressBar label=\"Traction\" value={stats[4]}></ProgressBar>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Kart } from '../../classes/Kart';\nimport { PartContext } from '../../providers/PartProvider';\nimport { statColor, sumOfStats } from '../../util/Common';\nimport './KartCombo.scss';\n\ninterface KartComboProps {\n  kart: Kart;\n}\n\nconst KartCombo: React.FC<KartComboProps> = (props) => {\n  const context = React.useContext(PartContext);\n\n  const stats: JSX.Element[] = [];\n  const statLabels = ['S', 'A', 'W', 'H', 'T'];\n  const statValues =\n    props.kart.driver !== undefined\n      ? sumOfStats([\n          props.kart.driver,\n          props.kart.body,\n          props.kart.tire,\n          props.kart.glider,\n        ])\n      : [];\n  statLabels.forEach((value, index) =>\n    stats.push(\n      <p key={`kart-combo-${index}`}>\n        {value}:{' '}\n        <span style={{ color: statColor(statValues[index]) }}>\n          {statValues[index]}\n        </span>\n      </p>\n    )\n  );\n\n  return (\n    <div className=\"KartCombo\" onClick={() => context.setKart(props.kart)}>\n      <div className=\"Parts\">\n        <div className=\"KartComboPart\">\n          <img src={props.kart.driver.img} alt=\"Driver\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.body.img} alt=\"Body\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.tire.img} alt=\"Tire\"></img>\n        </div>\n        <div className=\"KartComboPart\">\n          <img src={props.kart.glider.img} alt=\"Glider\"></img>\n        </div>\n      </div>\n      <div className=\"Stats\">{stats}</div>\n    </div>\n  );\n};\n\nexport default KartCombo;\n","import { StatNames } from \"../providers/StatPriorityProvider\";\nimport { Part } from \"./Part\";\n\nexport class TopKartsRequest {\n  constructor(\n    readonly fixedDriver: Part | null,\n    readonly fixedBody: Part | null,\n    readonly fixedTire: Part | null,\n    readonly fixedGlider: Part | null,\n    readonly priorityStats: StatNames[],\n    readonly regularStats: StatNames[],\n    readonly kartCount: number\n  ) {}\n}","import React from 'react';\nimport {\n  arrayMove,\n  SortableContainer,\n  SortableElement,\n} from 'react-sortable-hoc';\nimport { Kart } from '../../classes/Kart';\nimport { TopKartsRequest } from '../../classes/TopKartsRequest';\nimport { PartContext } from '../../providers/PartProvider';\nimport {\n  StatNames,\n  StatPriorityContext,\n} from '../../providers/StatPriorityProvider';\nimport './StatPriority.scss';\n\nconst StatPriority: React.FC = () => {\n  const COLOR_TOP_PRIORITY = '#f92470';\n  const COLOR_REGULAR_PRIORITY = '#777';\n  const COLOR_PRIORITY_BAR = '#26baff';\n\n  const statPriorityContext = React.useContext(StatPriorityContext);\n  const partContext = React.useContext(PartContext)\n\n  const statColor = (index: number) => {\n    if (index < statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)) {\n      return COLOR_TOP_PRIORITY;\n    } else if (index > statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)) {\n      return COLOR_REGULAR_PRIORITY;\n    } else {\n      return COLOR_PRIORITY_BAR;\n    }\n  };\n\n  const SortableItem = SortableElement(({ value, currentIndex }: any) => (\n    <div className=\"Stat\" style={{ background: statColor(currentIndex) }}>\n      <p>{value}</p>\n    </div>\n  ));\n\n  const SortableList = SortableContainer(({ items }: any) => {\n    return (\n      <ul>\n        {items.map((value: any, index: any) => (\n          <SortableItem\n            key={`item-${index}`}\n            index={index}\n            currentIndex={index}\n            value={value}\n          ></SortableItem>\n        ))}\n      </ul>\n    );\n  });\n\n  const generateKarts = async () => {\n    const prioritySplit = statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)\n    const priority = statPriorityContext.statPriority.slice(0, prioritySplit);\n    const regular = statPriorityContext.statPriority.slice(prioritySplit + 1);\n    const response = await fetch('/topKarts', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(new TopKartsRequest(\n        partContext.driverIsFixed ? partContext.selectedDriver : null,\n        partContext.bodyIsFixed ? partContext.selectedBody : null,\n        partContext.tireIsFixed ? partContext.selectedTire : null,\n        partContext.gliderIsFixed ? partContext.selectedGlider : null,\n        priority,\n        regular,\n        100\n      ))\n    })\n    if (response.ok) {\n      response.text().then(jsonString => {\n        const topKarts: Kart[] = JSON.parse(jsonString)\n        partContext.setTopKarts(topKarts)\n      })\n    }\n  }\n\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\n    statPriorityContext.setNewStatPriority(\n      arrayMove(statPriorityContext.statPriority, oldIndex, newIndex)\n    );\n  };\n  \n  return (\n    <div className=\"StatPriority\">\n      <div className=\"StatList\">\n        <SortableList\n          items={statPriorityContext.statPriority}\n          onSortEnd={onSortEnd}\n        ></SortableList>\n      </div>\n      <button onClick={generateKarts}>Generate Karts</button>\n    </div>\n  );\n};\n\nexport default StatPriority;\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport KartCombo from '../KartCombo/KartCombo';\nimport './Optimizer.scss';\nimport StatPriority from '../StatPriority/StatPriority';\n\nconst Optimizer: React.FC = () => {\n  const partContext = React.useContext(PartContext);\n\n  return (\n    <div className=\"Optimizer\">\n      <StatPriority></StatPriority>\n      <div className=\"Options\">\n        {partContext.topKarts.map((kart, index) => (\n          <KartCombo key={`kart-${index}`} kart={kart}></KartCombo>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Optimizer;\n","import React, { Component } from 'react';\nimport { KartStats } from '../KartStats/KartStats';\nimport Optimizer from '../Optimizer/Optimizer';\nimport './Sidebar.scss';\n\nexport default class Sidebar extends Component {\n  render() {\n    return (\n      <div className=\"Sidebar\">\n        <KartStats></KartStats>\n        <Optimizer></Optimizer>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport './KartOptimizerApp.scss';\nimport { KartConfig } from './components/KartConfig/KartConfig';\nimport PartProvider from './providers/PartProvider';\nimport StatPriorityProvider from './providers/StatPriorityProvider';\nimport Sidebar from './components/Sidebar/Sidebar';\n\nexport default class KartOptimizerApp extends Component {\n  render() {\n    return (\n      <StatPriorityProvider>\n        <PartProvider>\n          <div className=\"KartOptimizerApp\">\n            <Header></Header>\n            <KartConfig></KartConfig>\n            <Sidebar></Sidebar>\n          </div>\n        </PartProvider>\n      </StatPriorityProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport KartOptimizerApp from './KartOptimizerApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}