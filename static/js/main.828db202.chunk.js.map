{"version":3,"sources":["providers/StatPriorityProvider.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","classes/Stats.tsx","classes/Part.tsx","providers/PartProvider.tsx","components/PartSelection/PartSelection.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/KartConfig/KartConfig.tsx","util/Common.tsx","components/ProgressBar/ProgressBar.tsx","components/KartStats/KartStats.tsx","components/KartCombo/KartCombo.tsx","classes/TopKartsRequest.tsx","components/StatPriority/StatPriority.tsx","components/Optimizer/Optimizer.tsx","components/Sidebar/Sidebar.tsx","KartOptimizerApp.tsx","index.tsx"],"names":["StatNames","Header","className","src","mk8","alt","Component","SpeedHandlingTerrain","TractionTerrain","defaultStatPriorityData","statPriority","SPEED","ACCELERATION","PRIORITY","WEIGHT","HANDLING","TRACTION","setNewStatPriority","console","log","StatPriorityContext","React","createContext","StatPriorityProvider","props","children","useState","setStatPriority","data","useEffect","Provider","value","PartType","Stats","weight","acceleration","onRoadTraction","offRoadTraction","miniTurbo","groundSpeed","waterSpeed","antiGravitySpeed","airSpeed","groundHandling","waterHandling","antiGravityHandling","airHandling","Part","name","img","stats","stat","this","map","getStat","defaultPartData","drivers","bodies","tires","gliders","selectedDriver","selectedBody","selectedTire","selectedGlider","driverIsFixed","bodyIsFixed","tireIsFixed","gliderIsFixed","topKarts","topKartsLoaded","setPart","part","type","setKart","kart","setTopKarts","toggleFixed","PartContext","PartProvider","partData","setPartData","DRIVER","BODY","TIRE","GLIDER","driver","body","tire","glider","getPartList","endpoint","a","fetch","method","response","ok","text","then","jsonString","JSON","parse","PartSelection","partContext","useContext","isFixed","selectedPartType","style","background","isSelected","undefined","selectedPart","onClick","split","length","includes","pop","join","partName","PartTile","PartList","Array","partList","fill","_","index","KartConfig","selectedPartList","state","setState","show","partListType","isSelectedCategory","href","sumOfStats","parts","adjustStat","reduce","sum","current","statColor","startColor","endColor","color","diff","ProgressBar","separators","i","push","height","label","toFixed","width","KartStats","context","KartCombo","statValues","forEach","TopKartsRequest","fixedDriver","fixedBody","fixedTire","fixedGlider","priorityStats","regularStats","kartCount","StatPriority","statPriorityContext","SortableItem","SortableElement","currentIndex","indexOf","SortableList","SortableContainer","items","generateKarts","prioritySplit","priority","slice","regular","headers","stringify","onSortEnd","oldIndex","newIndex","arrayMove","Optimizer","Sidebar","KartOptimizerApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.828db202.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface StatPriorityData {\r\n  statPriority: StatNames[];\r\n  setNewStatPriority: (statPriority: StatNames[]) => void;\r\n}\r\n\r\nexport enum StatNames {\r\n  SPEED = 'Speed',\r\n  ACCELERATION = 'Acceleration',\r\n  WEIGHT = 'Weight',\r\n  HANDLING = 'Handling',\r\n  TRACTION = 'Traction',\r\n  PRIORITY = '',\r\n}\r\n\r\nconst defaultStatPriorityData = {\r\n  statPriority: [\r\n    StatNames.SPEED,\r\n    StatNames.ACCELERATION,\r\n    StatNames.PRIORITY,\r\n    StatNames.WEIGHT,\r\n    StatNames.HANDLING,\r\n    StatNames.TRACTION,\r\n  ],\r\n  setNewStatPriority: (statPriority: StatNames[]) => console.log(statPriority),\r\n};\r\n\r\nexport const StatPriorityContext = React.createContext<StatPriorityData>(\r\n  defaultStatPriorityData\r\n);\r\n\r\nconst StatPriorityProvider: React.FC = (props) => {\r\n  const { children } = props;\r\n  const [statPriority, setStatPriority] = React.useState(\r\n    defaultStatPriorityData\r\n  );\r\n\r\n  const setNewStatPriority = (statPriority: StatNames[]) => {\r\n    setStatPriority((data) => {\r\n      return { ...data, statPriority: statPriority };\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setStatPriority((data) => {\r\n      return { ...data, setNewStatPriority: setNewStatPriority };\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <StatPriorityContext.Provider value={statPriority}>\r\n      {children}\r\n    </StatPriorityContext.Provider>\r\n  );\r\n};\r\n\r\nexport default StatPriorityProvider;\r\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from 'react';\nimport './Header.scss';\nimport mk8 from './MarioKart8.webp';\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SpeedHandlingTerrain {\r\n  GROUND = 'Ground',\r\n  WATER = 'Water',\r\n  ANTI_GRAVITY = 'Anti-Gravity',\r\n  AIR = 'Air',\r\n}\r\n\r\nexport enum TractionTerrain {\r\n  ON_ROAD = 'On-Road',\r\n  OFF_ROAD = 'Off-Road',\r\n}\r\n\r\nexport class Stats {\r\n  constructor(\r\n    readonly weight: number = 0,\r\n    readonly acceleration: number = 0,\r\n    readonly onRoadTraction: number = 0,\r\n    readonly offRoadTraction: number = 0,\r\n    readonly miniTurbo: number = 0,\r\n    readonly groundSpeed: number = 0,\r\n    readonly waterSpeed: number = 0,\r\n    readonly antiGravitySpeed: number = 0,\r\n    readonly airSpeed: number = 0,\r\n    readonly groundHandling: number = 0,\r\n    readonly waterHandling: number = 0,\r\n    readonly antiGravityHandling: number = 0,\r\n    readonly airHandling: number = 0\r\n  ) {}\r\n}\r\n\r\nexport const ReducedStats = (\r\n  speed: number,\r\n  acceleration: number,\r\n  weight: number,\r\n  handling: number,\r\n  traction: number\r\n) => {\r\n  return new Stats(\r\n    weight,\r\n    acceleration,\r\n    0,\r\n    traction,\r\n    0,\r\n    speed,\r\n    0,\r\n    0,\r\n    0,\r\n    handling,\r\n    0,\r\n    0,\r\n    0\r\n  );\r\n};\r\n","import { StatNames } from '../providers/StatPriorityProvider';\r\nimport { Stats } from './Stats';\r\n\r\nexport class Part {\r\n  constructor(\r\n    readonly name: string = '',\r\n    readonly img: string = '',\r\n    readonly stats: Stats = new Stats()\r\n  ) {}\r\n\r\n  getStat(stat: StatNames): number {\r\n    switch (stat) {\r\n      case StatNames.SPEED:\r\n        return this.stats.groundSpeed;\r\n      case StatNames.ACCELERATION:\r\n        return this.stats.acceleration;\r\n      case StatNames.WEIGHT:\r\n        return this.stats.weight;\r\n      case StatNames.HANDLING:\r\n        return this.stats.groundHandling;\r\n      case StatNames.TRACTION:\r\n        return this.stats.offRoadTraction;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  getStats(stats: StatNames[]): number[] {\r\n    return stats.map((stat) => this.getStat(stat));\r\n  }\r\n}\r\n\r\nexport enum PartType {\r\n  DRIVER = 'Driver',\r\n  BODY = 'Body',\r\n  TIRE = 'Tire',\r\n  GLIDER = 'Glider',\r\n}\r\n","import React from 'react';\r\nimport { Part, PartType } from '../classes/Part';\r\nimport { Kart } from '../classes/Kart';\r\n\r\nexport interface PartData {\r\n  drivers: Part[];\r\n  bodies: Part[];\r\n  tires: Part[];\r\n  gliders: Part[];\r\n  selectedDriver: Part;\r\n  selectedBody: Part;\r\n  selectedTire: Part;\r\n  selectedGlider: Part;\r\n  driverIsFixed: boolean;\r\n  bodyIsFixed: boolean;\r\n  tireIsFixed: boolean;\r\n  gliderIsFixed: boolean;\r\n  topKarts: Kart[];\r\n  topKartsLoaded: boolean;\r\n  setPart: (part: Part, type: PartType) => void;\r\n  setKart: (kart: Kart) => void;\r\n  setTopKarts: (topKarts: Kart[]) => void;\r\n  toggleFixed: (type: PartType) => void;\r\n}\r\n\r\nexport const defaultPartData: PartData = {\r\n  drivers: [],\r\n  bodies: [],\r\n  tires: [],\r\n  gliders: [],\r\n  selectedDriver: new Part(),\r\n  selectedBody: new Part(),\r\n  selectedTire: new Part(),\r\n  selectedGlider: new Part(),\r\n  driverIsFixed: false,\r\n  bodyIsFixed: false,\r\n  tireIsFixed: false,\r\n  gliderIsFixed: false,\r\n  topKarts: [],\r\n  topKartsLoaded: true,\r\n  setPart: (part: Part, type: PartType) => console.log(part, type),\r\n  setKart: (kart: Kart) => console.log(kart),\r\n  setTopKarts: (topKarts: Kart[]) => console.log(topKarts),\r\n  toggleFixed: (type: PartType) => console.log(type),\r\n};\r\n\r\nexport const PartContext = React.createContext<PartData>(defaultPartData);\r\n\r\nconst PartProvider: React.FC = (props) => {\r\n  const { children } = props;\r\n  const [partData, setPartData] = React.useState(defaultPartData);\r\n\r\n  const setPart = (part: Part, type: PartType) => {\r\n    switch (type) {\r\n      case PartType.DRIVER:\r\n        setPartData((data) => {\r\n          return { ...data, selectedDriver: part };\r\n        });\r\n        break;\r\n      case PartType.BODY:\r\n        setPartData((data) => {\r\n          return { ...data, selectedBody: part };\r\n        });\r\n        break;\r\n      case PartType.TIRE:\r\n        setPartData((data) => {\r\n          return { ...data, selectedTire: part };\r\n        });\r\n        break;\r\n      case PartType.GLIDER:\r\n        setPartData((data) => {\r\n          return { ...data, selectedGlider: part };\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const setKart = (kart: Kart) => {\r\n    setPartData((data) => {\r\n      return {\r\n        ...data,\r\n        selectedDriver: kart.driver,\r\n        selectedBody: kart.body,\r\n        selectedTire: kart.tire,\r\n        selectedGlider: kart.glider,\r\n      };\r\n    });\r\n  };\r\n\r\n  const setTopKarts = (topKarts: Kart[]) => {\r\n    setPartData((data) => {\r\n      return {\r\n        ...data,\r\n        topKarts: topKarts\r\n      }\r\n    })\r\n  }\r\n\r\n  const toggleFixed = (type: PartType) => {\r\n    switch (type) {\r\n      case PartType.DRIVER:\r\n        setPartData((data) => {\r\n          return {\r\n            ...data,\r\n            driverIsFixed: !data.driverIsFixed,\r\n          };\r\n        });\r\n        break;\r\n      case PartType.BODY:\r\n        setPartData((data) => {\r\n          return {\r\n            ...data,\r\n            bodyIsFixed: !data.bodyIsFixed,\r\n          };\r\n        });\r\n        break;\r\n      case PartType.TIRE:\r\n        setPartData((data) => {\r\n          return {\r\n            ...data,\r\n            tireIsFixed: !data.tireIsFixed,\r\n          };\r\n        });\r\n        break;\r\n      case PartType.GLIDER:\r\n        setPartData((data) => {\r\n          return {\r\n            ...data,\r\n            gliderIsFixed: !data.gliderIsFixed,\r\n          };\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  const getPartList = async (endpoint: string): Promise<Part[]> => {\r\n    try {\r\n      const response = await fetch(endpoint, { method: 'GET' });\r\n      if (response.ok) {\r\n        return response.text().then(jsonString => JSON.parse(jsonString) as Part[])\r\n      } else {\r\n        return []\r\n      }\r\n    } catch (error) {\r\n      return []\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setPartData({\r\n      drivers: [],\r\n      bodies: [],\r\n      tires: [],\r\n      gliders: [],\r\n      selectedDriver: new Part(),\r\n      selectedBody: new Part(),\r\n      selectedTire: new Part(),\r\n      selectedGlider: new Part(),\r\n      driverIsFixed: false,\r\n      bodyIsFixed: false,\r\n      tireIsFixed: false,\r\n      gliderIsFixed: false,\r\n      topKarts: [],\r\n      topKartsLoaded: true,\r\n      setPart: setPart,\r\n      setKart: setKart,\r\n      setTopKarts: setTopKarts,\r\n      toggleFixed: toggleFixed\r\n    });\r\n    getPartList('/drivers').then(drivers =>\r\n      setPartData(data => {\r\n        return {\r\n          ...data,\r\n          drivers: drivers,\r\n          selectedDriver: drivers[0]\r\n        }\r\n      })\r\n    );\r\n    getPartList('/bodies').then(bodies => {\r\n      setPartData(data => {\r\n        return {\r\n          ...data,\r\n          bodies: bodies,\r\n          selectedBody: bodies[0]\r\n        }\r\n      })\r\n    })\r\n    getPartList('/tires').then(tires => {\r\n      setPartData(data => {\r\n        return {\r\n          ...data,\r\n          tires: tires,\r\n          selectedTire: tires[0],\r\n        }\r\n      })\r\n    })\r\n    getPartList('/gliders').then(gliders => {\r\n      setPartData(data => {\r\n        return {\r\n          ...data,\r\n          gliders: gliders,\r\n          selectedGlider: gliders[0]\r\n        }\r\n      })\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <PartContext.Provider value={partData}>{children}</PartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PartProvider;\r\n","import React, { MouseEventHandler } from 'react';\r\nimport { Part, PartType } from '../../classes/Part';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport './PartSelection.scss';\r\n\r\ninterface PartSelectionProps {\r\n  selectedPart: Part;\r\n  selectedPartType: PartType;\r\n  isSelected: boolean;\r\n  isFixed: boolean;\r\n  onClick: MouseEventHandler;\r\n}\r\n\r\nconst PartSelection: React.FC<PartSelectionProps> = (props) => {\r\n  const partContext = React.useContext(PartContext);\r\n\r\n  const backgroundColor = (): string => {\r\n    return props.isSelected && props.selectedPart !== undefined ? '#26baff' : '#777';\r\n  };\r\n\r\n  const lockButtonColor = (): string => {\r\n    return isFixed() ? '#f92470' : '#26baff';\r\n  };\r\n\r\n  const partName = (): string => {\r\n    let split = props.selectedPart.name.split(' ');\r\n    if (split[split.length - 1].includes('(')) split.pop();\r\n    if (split.length >= 2) return `${split[0]} ${split[1]}`;\r\n    return split.join(' ');\r\n  };\r\n\r\n  const isFixed = () => {\r\n    switch (props.selectedPartType) {\r\n      case PartType.DRIVER:\r\n        return partContext.driverIsFixed;\r\n      case PartType.BODY:\r\n        return partContext.bodyIsFixed;\r\n      case PartType.TIRE:\r\n        return partContext.tireIsFixed;\r\n      case PartType.GLIDER:\r\n        return partContext.gliderIsFixed;\r\n    }\r\n  };\r\n\r\n  const toggleFixed = (type: PartType) => partContext.toggleFixed(type);\r\n\r\n  return (\r\n    <div className=\"PartSelection\">\r\n      <div\r\n        className=\"SelectedPart\"\r\n        style={{ background: backgroundColor() }}\r\n        onClick={props.onClick}\r\n      >\r\n        <img\r\n          className=\"PartImage\"\r\n          src={props.selectedPart !== undefined ? props.selectedPart.img : ''}\r\n          alt={props.selectedPart !== undefined ? props.selectedPart.name : ''}\r\n        ></img>\r\n      </div>\r\n      <div\r\n        className=\"PartLock\"\r\n        style={{ background: lockButtonColor() }}\r\n        onClick={() => props.selectedPart !== undefined ? toggleFixed(props.selectedPartType) : {}}\r\n      >\r\n        <p className=\"PartLabel\">{props.selectedPart !== undefined ? partName() : 'None'}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartSelection;\r\n","import React from 'react';\nimport { PartContext } from '../../providers/PartProvider';\nimport { Part, PartType } from '../../classes/Part';\nimport './PartTile.scss';\n\ninterface PartTileProps {\n  part: Part;\n  type?: PartType;\n  isSelected?: boolean;\n}\n\nconst PartTile: React.FC<PartTileProps> = (props) => {\n  const partData = React.useContext(PartContext);\n\n  const color = (): string => {\n    return props.isSelected ? '#26baff' : '#555';\n  };\n\n  return (\n    <div\n      className=\"PartTile\"\n      onClick={() => {\n        if (props.type) partData.setPart(props.part, props.type);\n      }}\n      style={{ background: color() }}\n    >\n      <img className=\"PartImage\" src={props.part.img} alt=\"Part\" />\n    </div>\n  );\n};\n\nexport default PartTile;\n","import React from 'react';\r\nimport { Part, PartType } from '../../classes/Part';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport PartTile from '../PartTile/PartTile';\r\nimport './PartList.scss';\r\n\r\ninterface PartListProps {\r\n  partList: Part[];\r\n  type: PartType;\r\n}\r\n\r\nconst PartList: React.FC<PartListProps> = (props) => {\r\n  const partData = React.useContext(PartContext);\r\n\r\n  const isSelected = (part: Part) => {\r\n    return (\r\n      part.name === partData.selectedDriver.name ||\r\n      part.name === partData.selectedBody.name ||\r\n      part.name === partData.selectedTire.name ||\r\n      part.name === partData.selectedGlider.name\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"PartList\">\r\n      {new Array(props.partList.length).fill(0).map((_, index) => {\r\n        return (\r\n          <PartTile\r\n            key={index}\r\n            part={props.partList[index]}\r\n            type={props.type}\r\n            isSelected={isSelected(props.partList[index])}\r\n          ></PartTile>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartList;\r\n","import React, { useState } from 'react';\r\n\r\nimport './KartConfig.scss';\r\nimport PartSelection from '../PartSelection/PartSelection';\r\nimport { Part, PartType } from '../../classes/Part';\r\nimport PartList from '../PartList/PartList';\r\nimport { PartContext } from '../../providers/PartProvider';\r\n\r\ninterface KartConfigState {\r\n  selectedPartList: Part[];\r\n}\r\n\r\nexport const KartConfig: React.FC = () => {\r\n  const partData = React.useContext(PartContext);\r\n  const [state, setState] = useState<KartConfigState>({\r\n    selectedPartList: React.useContext(PartContext).drivers,\r\n  });\r\n\r\n  const show = (partList: Part[]) => {\r\n    setState({\r\n      selectedPartList: partList,\r\n    });\r\n  };\r\n\r\n  const partListType = (partList: Part[]): PartType => {\r\n    if (partList.length > 0) {\r\n      switch (partList[0].name) {\r\n        case 'Standard Kart':\r\n          return PartType.BODY;\r\n        case 'Standard':\r\n          return PartType.TIRE;\r\n        case 'Super Glider':\r\n          return PartType.GLIDER;\r\n        default:\r\n          return PartType.DRIVER;\r\n      }\r\n    }\r\n    return PartType.DRIVER;\r\n  };\r\n\r\n  const partList = (): Part[] => {\r\n    return state.selectedPartList.length === 0\r\n      ? partData.drivers\r\n      : state.selectedPartList;\r\n  };\r\n\r\n  const isSelectedCategory = (partList: Part[]): boolean => {\r\n    return partListType(partList) === partListType(state.selectedPartList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"KartConfig\">\r\n      <div className=\"CenterContainer\">\r\n        <div className=\"PartOptions\">\r\n          <PartSelection\r\n            selectedPart={partData.selectedDriver}\r\n            selectedPartType={partListType(partData.drivers)}\r\n            isSelected={isSelectedCategory(partData.drivers)}\r\n            isFixed={partData.driverIsFixed}\r\n            onClick={() => show(partData.drivers)}\r\n          ></PartSelection>\r\n          <PartSelection\r\n            selectedPart={partData.selectedBody}\r\n            selectedPartType={partListType(partData.bodies)}\r\n            isSelected={isSelectedCategory(partData.bodies)}\r\n            isFixed={partData.bodyIsFixed}\r\n            onClick={() => show(partData.bodies)}\r\n          ></PartSelection>\r\n          <PartSelection\r\n            selectedPart={partData.selectedTire}\r\n            selectedPartType={partListType(partData.tires)}\r\n            isSelected={isSelectedCategory(partData.tires)}\r\n            isFixed={partData.tireIsFixed}\r\n            onClick={() => show(partData.tires)}\r\n          ></PartSelection>\r\n          <PartSelection\r\n            selectedPart={partData.selectedGlider}\r\n            selectedPartType={partListType(partData.gliders)}\r\n            isSelected={isSelectedCategory(partData.gliders)}\r\n            isFixed={partData.gliderIsFixed}\r\n            onClick={() => show(partData.gliders)}\r\n          ></PartSelection>\r\n        </div>\r\n        <div className=\"Separator\"></div>\r\n        {\r\n          partList().length !== 0\r\n            ? <PartList\r\n                partList={partList()}\r\n                type={partListType(partList())}\r\n              ></PartList>\r\n            : <p className=\"NoBackend\">\r\n                Backend is not running.<br/>\r\n                Please download the <a href=\"https://drive.google.com/file/d/1B-_u6OXax6jnumH9PEm9Pit_3ZycWg5m/view?usp=sharing\">backend</a><br/>\r\n                then open a terminal in the same location as the downloaded .jar file\r\n                and run the command: <span>java -jar ./kart-optimizer-backend.jar</span>\r\n              </p>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { Part } from '../classes/Part';\r\n\r\nexport const sumOfStats = (parts: Part[]): number[] => {\r\n  const adjustStat = (stat: number): number => stat / 4 + 0.75;\r\n  return [\r\n    adjustStat(\r\n      parts\r\n        .map((part) => part !== undefined ? part.stats.groundSpeed : 0)\r\n        .reduce((sum, current) => sum + current)\r\n    ),\r\n    adjustStat(\r\n      parts\r\n        .map((part) => part !== undefined ? part.stats.acceleration : 0)\r\n        .reduce((sum, current) => sum + current)\r\n    ),\r\n    adjustStat(\r\n      parts\r\n        .map((part) => part !== undefined ? part.stats.weight : 0)\r\n        .reduce((sum, current) => sum + current)\r\n    ),\r\n    adjustStat(\r\n      parts\r\n        .map((part) => part !== undefined ? part.stats.groundHandling : 0)\r\n        .reduce((sum, current) => sum + current)\r\n    ),\r\n    adjustStat(\r\n      parts\r\n        .map((part) => part !== undefined ? part.stats.offRoadTraction : 0)\r\n        .reduce((sum, current) => sum + current)\r\n    ),\r\n  ];\r\n};\r\n\r\nexport const statColor = (stat: number): string => {\r\n  const startColor = [38, 186, 255];\r\n  const endColor = [249, 36, 112];\r\n  const diffs = startColor.map((color, index) => endColor[index] - color);\r\n  const color = diffs.map(\r\n    (diff, index) => startColor[index] + diff * (stat / 6)\r\n  );\r\n  return `rgb(${color[0]}, ${color[1]}, ${color[2]})`;\r\n};\r\n","import React from 'react';\r\nimport { statColor } from '../../util/Common';\r\nimport './ProgressBar.scss';\r\n\r\ninterface ProgressBarProps {\r\n  label: String;\r\n  value: number;\r\n}\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = (props) => {\r\n  let separators = [];\r\n  for (var i = 0; i < 23; i++) {\r\n    separators.push(\r\n      <div\r\n        key={`separator-${i}`}\r\n        className=\"VerticalSeparator\"\r\n        style={{ height: (i + 1) % 4 === 0 ? '1rem' : '0.5rem' }}\r\n      ></div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"ProgressBar\">\r\n      <p>\r\n        {props.label}:{' '}\r\n        <span style={{ color: statColor(props.value) }}>\r\n          {+props.value.toFixed(2)}\r\n        </span>\r\n      </p>\r\n      <div className=\"Bar\">\r\n        <div\r\n          className=\"Progress\"\r\n          style={{ width: `${100 - props.value * (100 / 6)}%` }}\r\n        ></div>\r\n        <div className=\"SeparatorContainer\">{separators}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport { sumOfStats } from '../../util/Common';\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport './KartStats.scss';\r\n\r\nexport const KartStats: React.FC = () => {\r\n  const context = React.useContext(PartContext);\r\n  const stats = sumOfStats([\r\n    context.selectedDriver,\r\n    context.selectedBody,\r\n    context.selectedTire,\r\n    context.selectedGlider,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"PartStats\">\r\n      <ProgressBar label=\"Speed\" value={stats[0]}></ProgressBar>\r\n      <ProgressBar label=\"Acceleration\" value={stats[1]}></ProgressBar>\r\n      <ProgressBar label=\"Weight\" value={stats[2]}></ProgressBar>\r\n      <ProgressBar label=\"Handling\" value={stats[3]}></ProgressBar>\r\n      <ProgressBar label=\"Traction\" value={stats[4]}></ProgressBar>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Kart } from '../../classes/Kart';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport { statColor, sumOfStats } from '../../util/Common';\r\nimport './KartCombo.scss';\r\n\r\ninterface KartComboProps {\r\n  kart: Kart;\r\n}\r\n\r\nconst KartCombo: React.FC<KartComboProps> = (props) => {\r\n  const context = React.useContext(PartContext);\r\n\r\n  const stats: JSX.Element[] = [];\r\n  const statLabels = ['S', 'A', 'W', 'H', 'T'];\r\n  const statValues =\r\n    props.kart.driver !== undefined\r\n      ? sumOfStats([\r\n          props.kart.driver,\r\n          props.kart.body,\r\n          props.kart.tire,\r\n          props.kart.glider,\r\n        ])\r\n      : [];\r\n  statLabels.forEach((value, index) =>\r\n    stats.push(\r\n      <p key={`kart-combo-${index}`}>\r\n        {value}:{' '}\r\n        <span style={{ color: statColor(statValues[index]) }}>\r\n          {statValues[index]}\r\n        </span>\r\n      </p>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"KartCombo\" onClick={() => context.setKart(props.kart)}>\r\n      <div className=\"Parts\">\r\n        <div className=\"KartComboPart\">\r\n          <img src={props.kart.driver.img} alt=\"Driver\"></img>\r\n        </div>\r\n        <div className=\"KartComboPart\">\r\n          <img src={props.kart.body.img} alt=\"Body\"></img>\r\n        </div>\r\n        <div className=\"KartComboPart\">\r\n          <img src={props.kart.tire.img} alt=\"Tire\"></img>\r\n        </div>\r\n        <div className=\"KartComboPart\">\r\n          <img src={props.kart.glider.img} alt=\"Glider\"></img>\r\n        </div>\r\n      </div>\r\n      <div className=\"Stats\">{stats}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KartCombo;\r\n","import { StatNames } from \"../providers/StatPriorityProvider\";\r\nimport { Part } from \"./Part\";\r\n\r\nexport class TopKartsRequest {\r\n  constructor(\r\n    readonly fixedDriver: Part | null,\r\n    readonly fixedBody: Part | null,\r\n    readonly fixedTire: Part | null,\r\n    readonly fixedGlider: Part | null,\r\n    readonly priorityStats: StatNames[],\r\n    readonly regularStats: StatNames[],\r\n    readonly kartCount: number\r\n  ) {}\r\n}","import React from 'react';\r\nimport {\r\n  arrayMove,\r\n  SortableContainer,\r\n  SortableElement,\r\n} from 'react-sortable-hoc';\r\nimport { Kart } from '../../classes/Kart';\r\nimport { TopKartsRequest } from '../../classes/TopKartsRequest';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport {\r\n  StatNames,\r\n  StatPriorityContext,\r\n} from '../../providers/StatPriorityProvider';\r\nimport './StatPriority.scss';\r\n\r\nconst StatPriority: React.FC = () => {\r\n  const COLOR_TOP_PRIORITY = '#f92470';\r\n  const COLOR_REGULAR_PRIORITY = '#777';\r\n  const COLOR_PRIORITY_BAR = '#26baff';\r\n\r\n  const statPriorityContext = React.useContext(StatPriorityContext);\r\n  const partContext = React.useContext(PartContext)\r\n\r\n  const statColor = (index: number) => {\r\n    if (index < statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)) {\r\n      return COLOR_TOP_PRIORITY;\r\n    } else if (index > statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)) {\r\n      return COLOR_REGULAR_PRIORITY;\r\n    } else {\r\n      return COLOR_PRIORITY_BAR;\r\n    }\r\n  };\r\n\r\n  const SortableItem = SortableElement(({ value, currentIndex }: any) => (\r\n    <div className=\"Stat\" style={{ background: statColor(currentIndex) }}>\r\n      <p>{value}</p>\r\n    </div>\r\n  ));\r\n\r\n  const SortableList = SortableContainer(({ items }: any) => {\r\n    return (\r\n      <ul>\r\n        {items.map((value: any, index: any) => (\r\n          <SortableItem\r\n            key={`item-${index}`}\r\n            index={index}\r\n            currentIndex={index}\r\n            value={value}\r\n          ></SortableItem>\r\n        ))}\r\n      </ul>\r\n    );\r\n  });\r\n\r\n  const generateKarts = async () => {\r\n    const prioritySplit = statPriorityContext.statPriority.indexOf(StatNames.PRIORITY)\r\n    const priority = statPriorityContext.statPriority.slice(0, prioritySplit);\r\n    const regular = statPriorityContext.statPriority.slice(prioritySplit + 1);\r\n    const response = await fetch('/topKarts', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(new TopKartsRequest(\r\n        partContext.driverIsFixed ? partContext.selectedDriver : null,\r\n        partContext.bodyIsFixed ? partContext.selectedBody : null,\r\n        partContext.tireIsFixed ? partContext.selectedTire : null,\r\n        partContext.gliderIsFixed ? partContext.selectedGlider : null,\r\n        priority,\r\n        regular,\r\n        100\r\n      ))\r\n    })\r\n    if (response.ok) {\r\n      response.text().then(jsonString => {\r\n        const topKarts: Kart[] = JSON.parse(jsonString)\r\n        partContext.setTopKarts(topKarts)\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSortEnd = ({ oldIndex, newIndex }: any) => {\r\n    statPriorityContext.setNewStatPriority(\r\n      arrayMove(statPriorityContext.statPriority, oldIndex, newIndex)\r\n    );\r\n  };\r\n  \r\n  return (\r\n    <div className=\"StatPriority\">\r\n      <div className=\"StatList\">\r\n        <SortableList\r\n          items={statPriorityContext.statPriority}\r\n          onSortEnd={onSortEnd}\r\n        ></SortableList>\r\n      </div>\r\n      <button onClick={generateKarts}>Generate Karts</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatPriority;\r\n","import React from 'react';\r\nimport { PartContext } from '../../providers/PartProvider';\r\nimport KartCombo from '../KartCombo/KartCombo';\r\nimport './Optimizer.scss';\r\nimport StatPriority from '../StatPriority/StatPriority';\r\n\r\nconst Optimizer: React.FC = () => {\r\n  const partContext = React.useContext(PartContext);\r\n\r\n  return (\r\n    <div className=\"Optimizer\">\r\n      <StatPriority></StatPriority>\r\n      <div className=\"Options\">\r\n        {partContext.topKarts.map((kart, index) => (\r\n          <KartCombo key={`kart-${index}`} kart={kart}></KartCombo>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Optimizer;\r\n","import React, { Component } from 'react';\r\nimport { KartStats } from '../KartStats/KartStats';\r\nimport Optimizer from '../Optimizer/Optimizer';\r\nimport './Sidebar.scss';\r\n\r\nexport default class Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <KartStats></KartStats>\r\n        <Optimizer></Optimizer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport './KartOptimizerApp.scss';\r\nimport { KartConfig } from './components/KartConfig/KartConfig';\r\nimport PartProvider from './providers/PartProvider';\r\nimport StatPriorityProvider from './providers/StatPriorityProvider';\r\nimport Sidebar from './components/Sidebar/Sidebar';\r\n\r\nexport default class KartOptimizerApp extends Component {\r\n  render() {\r\n    return (\r\n      <StatPriorityProvider>\r\n        <PartProvider>\r\n          <div className=\"KartOptimizerApp\">\r\n            <Header></Header>\r\n            <KartConfig></KartConfig>\r\n            <Sidebar></Sidebar>\r\n          </div>\r\n        </PartProvider>\r\n      </StatPriorityProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport KartOptimizerApp from './KartOptimizerApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <KartOptimizerApp></KartOptimizerApp>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}