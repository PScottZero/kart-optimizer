{"version":3,"sources":["components/PartTile/Part.tsx","components/Header/MarioKart8.webp","components/Header/Header.tsx","components/PartTile/PartTile.tsx","components/PartList/PartList.tsx","components/PartSelection/PartSelection.tsx","components/KartConfig/KartConfig.tsx","index.tsx"],"names":["PartType","Header","className","src","mk8","alt","Component","PartTile","onClick","this","props","part","img","PartList","parts","Array","partList","length","fill","map","_","index","callbackFunc","type","PartSelection","selectedPart","name","KartConfig","selectPart","DRIVER","setState","selectedDriver","BODY","selectedBody","TIRE","selectedTire","GLIDER","selectedGlider","state","selectedPartList","drivers","bodies","tires","gliders","show","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7a8108f.chunk.js","sourcesContent":["import { Stats } from \"../KartConfig/Stats\";\n\nexport class Part {\n  constructor(\n    readonly name: string,\n    readonly img: string,\n    readonly stats: Stats\n  ) {}\n}\n\nexport enum PartType {\n  DRIVER = \"Driver\",\n  BODY = \"Body\",\n  TIRE = \"Tire\",\n  GLIDER = \"Glider\",\n}\n","export default __webpack_public_path__ + \"static/media/MarioKart8.428361ae.webp\";","import React, { Component } from \"react\";\nimport \"./Header.scss\";\nimport mk8 from \"./MarioKart8.webp\";\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <div className=\"Logo\">\n          <img className=\"LogoImg\" src={mk8} alt=\"Mario Kart 8 Logo\"></img>\n          <p className=\"LogoText\">Kart Optimizer</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component, MouseEventHandler } from \"react\";\nimport { Part } from \"./Part\";\nimport \"./PartTile.scss\";\n\nexport default class PartTile extends Component<{\n  part: Part;\n  onClick: MouseEventHandler;\n}> {\n  render() {\n    return (\n      <div className=\"PartTile\" onClick={this.props.onClick}>\n        <img className=\"PartImage\" src={this.props.part.img} alt=\"Part\" />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Part, PartType } from \"../PartTile/Part\";\nimport PartTile from \"../PartTile/PartTile\";\nimport \"./PartList.scss\";\n\nexport default class PartList extends Component<{\n  partList: Part[];\n  type: PartType;\n  callbackFunc: Function;\n}> {\n  render() {\n    var parts = new Array(this.props.partList.length)\n      .fill(0)\n      .map((_, index) => {\n        return (\n          <PartTile\n            part={this.props.partList[index]}\n            onClick={() =>\n              this.props.callbackFunc(\n                this.props.partList[index],\n                this.props.type\n              )\n            }\n          ></PartTile>\n        );\n      });\n    return <div className=\"PartList\">{parts}</div>;\n  }\n}\n","import React, { Component, MouseEventHandler } from \"react\";\nimport { Part } from \"../PartTile/Part\";\nimport \"./PartSelection.scss\";\n\nexport default class PartSelection extends Component<{\n  selectedPart: Part;\n  onClick: MouseEventHandler;\n}> {\n  render() {\n    return (\n      <div className=\"PartSelection\" onClick={this.props.onClick}>\n        <img\n          className=\"PartImage\"\n          src={this.props.selectedPart.img}\n          alt={this.props.selectedPart.name}\n        ></img>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport drivers from \"./json/drivers.json\";\nimport bodies from \"./json/bodies.json\";\nimport tires from \"./json/tires.json\";\nimport gliders from \"./json/gliders.json\";\nimport \"./KartConfig.scss\";\nimport PartList from \"../PartList/PartList\";\nimport PartSelection from \"../PartSelection/PartSelection\";\nimport { Part, PartType } from \"../PartTile/Part\";\n\nexport default class KartConfig extends Component<\n  {},\n  {\n    selectedPartList: Part[];\n    selectedDriver: Part;\n    selectedBody: Part;\n    selectedTire: Part;\n    selectedGlider: Part;\n  }\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      selectedPartList: drivers,\n      selectedDriver: drivers[0],\n      selectedBody: bodies[0],\n      selectedTire: tires[0],\n      selectedGlider: gliders[0],\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"KartConfig\">\n        <div className=\"CenterContainer\">\n          <div className=\"PartOptions\">\n            <PartSelection\n              selectedPart={this.state.selectedDriver}\n              onClick={() => this.show(drivers)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedBody}\n              onClick={() => this.show(bodies)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedTire}\n              onClick={() => this.show(tires)}\n            ></PartSelection>\n            <PartSelection\n              selectedPart={this.state.selectedGlider}\n              onClick={() => this.show(gliders)}\n            ></PartSelection>\n          </div>\n          <div className=\"Separator\"></div>\n          <PartList\n            partList={this.state.selectedPartList}\n            type={this.type()}\n            callbackFunc={this.selectPart}\n          ></PartList>\n        </div>\n      </div>\n    );\n  }\n\n  show(partList: Part[]) {\n    this.setState({\n      selectedPartList: partList,\n    });\n  }\n\n  type(): PartType {\n    switch (this.state.selectedPartList) {\n      case drivers:\n        return PartType.DRIVER;\n      case bodies:\n        return PartType.BODY;\n      case tires:\n        return PartType.TIRE;\n      case gliders:\n        return PartType.GLIDER;\n      default:\n        return PartType.DRIVER;\n    }\n  }\n\n  selectPart = (part: Part, type: PartType) => {\n    switch (type) {\n      case PartType.DRIVER:\n        this.setState({ selectedDriver: part });\n        break;\n      case PartType.BODY:\n        this.setState({ selectedBody: part });\n        break;\n      case PartType.TIRE:\n        this.setState({ selectedTire: part });\n        break;\n      case PartType.GLIDER:\n        this.setState({ selectedGlider: part });\n        break;\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Header from \"./components/Header/Header\";\nimport KartConfig from \"./components/KartConfig/KartConfig\";\nimport \"./index.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"Grid\">\n      <Header></Header>\n      <KartConfig></KartConfig>\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}